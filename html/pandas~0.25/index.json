{"1. Installation": "install.html", "2. 10 minutes to pandas": "getting_started/10min.html", "2. Comparison with R / R libraries": "getting_started/comparison/comparison_with_r.html", "2. Comparison with SAS": "getting_started/comparison/comparison_with_sas.html", "2. Comparison with SQL": "getting_started/comparison/comparison_with_sql.html", "2. Comparison with Stata": "getting_started/comparison/comparison_with_stata.html", "2. Comparison with other tools": "getting_started/comparison/index.html", "2. Essential basic functionality": "getting_started/basics.html", "2. Getting started": "getting_started/index.html", "2. Intro to data structures": "getting_started/dsintro.html", "2. Package overview": "getting_started/overview.html", "2. Tutorials": "getting_started/tutorials.html", "3. Categorical data": "user_guide/categorical.html", "3. Computational tools": "user_guide/computation.html", "3. Cookbook": "user_guide/cookbook.html", "3. Enhancing performance": "user_guide/enhancingperf.html", "3. Frequently Asked Questions (FAQ)": "user_guide/gotchas.html", "3. Group By: split-apply-combine": "user_guide/groupby.html", "3. IO tools (text, CSV, HDF5, \u2026)": "user_guide/io.html", "3. Indexing and selecting data": "user_guide/indexing.html", "3. Merge, join, and concatenate": "user_guide/merging.html", "3. MultiIndex / advanced indexing": "user_guide/advanced.html", "3. Nullable integer data type": "user_guide/integer_na.html", "3. Options and settings": "user_guide/options.html", "3. Reshaping and pivot tables": "user_guide/reshaping.html", "3. Sparse data structures": "user_guide/sparse.html", "3. Styling": "user_guide/style.html", "3. Time deltas": "user_guide/timedeltas.html", "3. Time series / date functionality": "user_guide/timeseries.html", "3. User Guide": "user_guide/index.html", "3. Visualization": "user_guide/visualization.html", "3. Working with missing data": "user_guide/missing_data.html", "3. Working with text data": "user_guide/text.html", "4. Pandas ecosystem": "ecosystem.html", "5. API reference": "reference/index.html", "5. Index objects": "reference/indexing.html", "6. Contributing to pandas": "development/contributing.html", "6. Developer": "development/developer.html", "6. Development": "development/index.html", "6. Extending pandas": "development/extending.html", "6. Internals": "development/internals.html", "6. pandas docstring guide": "development/contributing_docstring.html", "api.extensions.ExtensionArray[source]": "reference/api/pandas.api.extensions.extensionarray.html", "api.extensions.ExtensionDtype[source]": "reference/api/pandas.api.extensions.extensiondtype.html", "arrays.DatetimeArray()": "reference/api/pandas.arrays.datetimearray.html", "arrays.IntegerArray()": "reference/api/pandas.arrays.integerarray.html", "arrays.IntervalArray[source]": "reference/api/pandas.arrays.intervalarray.html", "arrays.PandasArray()": "reference/api/pandas.arrays.pandasarray.html", "arrays.PeriodArray()": "reference/api/pandas.arrays.periodarray.html", "arrays.TimedeltaArray()": "reference/api/pandas.arrays.timedeltaarray.html", "BDay.apply()": "reference/api/pandas.tseries.offsets.bday.apply.html", "BDay.apply_index()": "reference/api/pandas.tseries.offsets.bday.apply_index.html", "BDay.base": "reference/api/pandas.tseries.offsets.bday.base.html", "BDay.copy()": "reference/api/pandas.tseries.offsets.bday.copy.html", "BDay.freqstr": "reference/api/pandas.tseries.offsets.bday.freqstr.html", "BDay.isAnchored()": "reference/api/pandas.tseries.offsets.bday.isanchored.html", "BDay.kwds": "reference/api/pandas.tseries.offsets.bday.kwds.html", "BDay.name": "reference/api/pandas.tseries.offsets.bday.name.html", "BDay.nanos": "reference/api/pandas.tseries.offsets.bday.nanos.html", "BDay.normalize": "reference/api/pandas.tseries.offsets.bday.normalize.html", "BDay.offset": "reference/api/pandas.tseries.offsets.bday.offset.html", "BDay.onOffset()": "reference/api/pandas.tseries.offsets.bday.onoffset.html", "BDay.rollback()": "reference/api/pandas.tseries.offsets.bday.rollback.html", "BDay.rollforward()": "reference/api/pandas.tseries.offsets.bday.rollforward.html", "BDay.rule_code": "reference/api/pandas.tseries.offsets.bday.rule_code.html", "BMonthBegin.apply()": "reference/api/pandas.tseries.offsets.bmonthbegin.apply.html", "BMonthBegin.apply_index()": "reference/api/pandas.tseries.offsets.bmonthbegin.apply_index.html", "BMonthBegin.base": "reference/api/pandas.tseries.offsets.bmonthbegin.base.html", "BMonthBegin.copy()": "reference/api/pandas.tseries.offsets.bmonthbegin.copy.html", "BMonthBegin.freqstr": "reference/api/pandas.tseries.offsets.bmonthbegin.freqstr.html", "BMonthBegin.isAnchored()": "reference/api/pandas.tseries.offsets.bmonthbegin.isanchored.html", "BMonthBegin.kwds": "reference/api/pandas.tseries.offsets.bmonthbegin.kwds.html", "BMonthBegin.name": "reference/api/pandas.tseries.offsets.bmonthbegin.name.html", "BMonthBegin.nanos": "reference/api/pandas.tseries.offsets.bmonthbegin.nanos.html", "BMonthBegin.normalize": "reference/api/pandas.tseries.offsets.bmonthbegin.normalize.html", "BMonthBegin.onOffset()": "reference/api/pandas.tseries.offsets.bmonthbegin.onoffset.html", "BMonthBegin.rollback()": "reference/api/pandas.tseries.offsets.bmonthbegin.rollback.html", "BMonthBegin.rollforward()": "reference/api/pandas.tseries.offsets.bmonthbegin.rollforward.html", "BMonthBegin.rule_code": "reference/api/pandas.tseries.offsets.bmonthbegin.rule_code.html", "BMonthEnd.apply()": "reference/api/pandas.tseries.offsets.bmonthend.apply.html", "BMonthEnd.apply_index()": "reference/api/pandas.tseries.offsets.bmonthend.apply_index.html", "BMonthEnd.base": "reference/api/pandas.tseries.offsets.bmonthend.base.html", "BMonthEnd.copy()": "reference/api/pandas.tseries.offsets.bmonthend.copy.html", "BMonthEnd.freqstr": "reference/api/pandas.tseries.offsets.bmonthend.freqstr.html", "BMonthEnd.isAnchored()": "reference/api/pandas.tseries.offsets.bmonthend.isanchored.html", "BMonthEnd.kwds": "reference/api/pandas.tseries.offsets.bmonthend.kwds.html", "BMonthEnd.name": "reference/api/pandas.tseries.offsets.bmonthend.name.html", "BMonthEnd.nanos": "reference/api/pandas.tseries.offsets.bmonthend.nanos.html", "BMonthEnd.normalize": "reference/api/pandas.tseries.offsets.bmonthend.normalize.html", "BMonthEnd.onOffset()": "reference/api/pandas.tseries.offsets.bmonthend.onoffset.html", "BMonthEnd.rollback()": "reference/api/pandas.tseries.offsets.bmonthend.rollback.html", "BMonthEnd.rollforward()": "reference/api/pandas.tseries.offsets.bmonthend.rollforward.html", "BMonthEnd.rule_code": "reference/api/pandas.tseries.offsets.bmonthend.rule_code.html", "BQuarterBegin.apply()": "reference/api/pandas.tseries.offsets.bquarterbegin.apply.html", "BQuarterBegin.apply_index()": "reference/api/pandas.tseries.offsets.bquarterbegin.apply_index.html", "BQuarterBegin.base": "reference/api/pandas.tseries.offsets.bquarterbegin.base.html", "BQuarterBegin.copy()": "reference/api/pandas.tseries.offsets.bquarterbegin.copy.html", "BQuarterBegin.freqstr": "reference/api/pandas.tseries.offsets.bquarterbegin.freqstr.html", "BQuarterBegin.isAnchored()": "reference/api/pandas.tseries.offsets.bquarterbegin.isanchored.html", "BQuarterBegin.kwds": "reference/api/pandas.tseries.offsets.bquarterbegin.kwds.html", "BQuarterBegin.name": "reference/api/pandas.tseries.offsets.bquarterbegin.name.html", "BQuarterBegin.nanos": "reference/api/pandas.tseries.offsets.bquarterbegin.nanos.html", "BQuarterBegin.normalize": "reference/api/pandas.tseries.offsets.bquarterbegin.normalize.html", "BQuarterBegin.onOffset()": "reference/api/pandas.tseries.offsets.bquarterbegin.onoffset.html", "BQuarterBegin.rollback()": "reference/api/pandas.tseries.offsets.bquarterbegin.rollback.html", "BQuarterBegin.rollforward()": "reference/api/pandas.tseries.offsets.bquarterbegin.rollforward.html", "BQuarterBegin.rule_code": "reference/api/pandas.tseries.offsets.bquarterbegin.rule_code.html", "BQuarterEnd.apply()": "reference/api/pandas.tseries.offsets.bquarterend.apply.html", "BQuarterEnd.apply_index()": "reference/api/pandas.tseries.offsets.bquarterend.apply_index.html", "BQuarterEnd.base": "reference/api/pandas.tseries.offsets.bquarterend.base.html", "BQuarterEnd.copy()": "reference/api/pandas.tseries.offsets.bquarterend.copy.html", "BQuarterEnd.freqstr": "reference/api/pandas.tseries.offsets.bquarterend.freqstr.html", "BQuarterEnd.isAnchored()": "reference/api/pandas.tseries.offsets.bquarterend.isanchored.html", "BQuarterEnd.kwds": "reference/api/pandas.tseries.offsets.bquarterend.kwds.html", "BQuarterEnd.name": "reference/api/pandas.tseries.offsets.bquarterend.name.html", "BQuarterEnd.nanos": "reference/api/pandas.tseries.offsets.bquarterend.nanos.html", "BQuarterEnd.normalize": "reference/api/pandas.tseries.offsets.bquarterend.normalize.html", "BQuarterEnd.onOffset()": "reference/api/pandas.tseries.offsets.bquarterend.onoffset.html", "BQuarterEnd.rollback()": "reference/api/pandas.tseries.offsets.bquarterend.rollback.html", "BQuarterEnd.rollforward()": "reference/api/pandas.tseries.offsets.bquarterend.rollforward.html", "BQuarterEnd.rule_code": "reference/api/pandas.tseries.offsets.bquarterend.rule_code.html", "BusinessDay.apply()": "reference/api/pandas.tseries.offsets.businessday.apply.html", "BusinessDay.apply_index()": "reference/api/pandas.tseries.offsets.businessday.apply_index.html", "BusinessDay.base": "reference/api/pandas.tseries.offsets.businessday.base.html", "BusinessDay.copy()": "reference/api/pandas.tseries.offsets.businessday.copy.html", "BusinessDay.freqstr": "reference/api/pandas.tseries.offsets.businessday.freqstr.html", "BusinessDay.isAnchored()": "reference/api/pandas.tseries.offsets.businessday.isanchored.html", "BusinessDay.kwds": "reference/api/pandas.tseries.offsets.businessday.kwds.html", "BusinessDay.name": "reference/api/pandas.tseries.offsets.businessday.name.html", "BusinessDay.nanos": "reference/api/pandas.tseries.offsets.businessday.nanos.html", "BusinessDay.normalize": "reference/api/pandas.tseries.offsets.businessday.normalize.html", "BusinessDay.offset": "reference/api/pandas.tseries.offsets.businessday.offset.html", "BusinessDay.onOffset()": "reference/api/pandas.tseries.offsets.businessday.onoffset.html", "BusinessDay.rollback()": "reference/api/pandas.tseries.offsets.businessday.rollback.html", "BusinessDay.rollforward()": "reference/api/pandas.tseries.offsets.businessday.rollforward.html", "BusinessDay.rule_code": "reference/api/pandas.tseries.offsets.businessday.rule_code.html", "BusinessHour.apply()": "reference/api/pandas.tseries.offsets.businesshour.apply.html", "BusinessHour.apply_index()": "reference/api/pandas.tseries.offsets.businesshour.apply_index.html", "BusinessHour.base": "reference/api/pandas.tseries.offsets.businesshour.base.html", "BusinessHour.copy()": "reference/api/pandas.tseries.offsets.businesshour.copy.html", "BusinessHour.freqstr": "reference/api/pandas.tseries.offsets.businesshour.freqstr.html", "BusinessHour.isAnchored()": "reference/api/pandas.tseries.offsets.businesshour.isanchored.html", "BusinessHour.kwds": "reference/api/pandas.tseries.offsets.businesshour.kwds.html", "BusinessHour.name": "reference/api/pandas.tseries.offsets.businesshour.name.html", "BusinessHour.nanos": "reference/api/pandas.tseries.offsets.businesshour.nanos.html", "BusinessHour.next_bday": "reference/api/pandas.tseries.offsets.businesshour.next_bday.html", "BusinessHour.normalize": "reference/api/pandas.tseries.offsets.businesshour.normalize.html", "BusinessHour.offset": "reference/api/pandas.tseries.offsets.businesshour.offset.html", "BusinessHour.onOffset()": "reference/api/pandas.tseries.offsets.businesshour.onoffset.html", "BusinessHour.rollback()": "reference/api/pandas.tseries.offsets.businesshour.rollback.html", "BusinessHour.rollforward()": "reference/api/pandas.tseries.offsets.businesshour.rollforward.html", "BusinessHour.rule_code": "reference/api/pandas.tseries.offsets.businesshour.rule_code.html", "BusinessMonthBegin.apply()": "reference/api/pandas.tseries.offsets.businessmonthbegin.apply.html", "BusinessMonthBegin.apply_index()": "reference/api/pandas.tseries.offsets.businessmonthbegin.apply_index.html", "BusinessMonthBegin.base": "reference/api/pandas.tseries.offsets.businessmonthbegin.base.html", "BusinessMonthBegin.copy()": "reference/api/pandas.tseries.offsets.businessmonthbegin.copy.html", "BusinessMonthBegin.freqstr": "reference/api/pandas.tseries.offsets.businessmonthbegin.freqstr.html", "BusinessMonthBegin.isAnchored()": "reference/api/pandas.tseries.offsets.businessmonthbegin.isanchored.html", "BusinessMonthBegin.kwds": "reference/api/pandas.tseries.offsets.businessmonthbegin.kwds.html", "BusinessMonthBegin.name": "reference/api/pandas.tseries.offsets.businessmonthbegin.name.html", "BusinessMonthBegin.nanos": "reference/api/pandas.tseries.offsets.businessmonthbegin.nanos.html", "BusinessMonthBegin.normalize": "reference/api/pandas.tseries.offsets.businessmonthbegin.normalize.html", "BusinessMonthBegin.onOffset()": "reference/api/pandas.tseries.offsets.businessmonthbegin.onoffset.html", "BusinessMonthBegin.rollback()": "reference/api/pandas.tseries.offsets.businessmonthbegin.rollback.html", "BusinessMonthBegin.rollforward()": "reference/api/pandas.tseries.offsets.businessmonthbegin.rollforward.html", "BusinessMonthBegin.rule_code": "reference/api/pandas.tseries.offsets.businessmonthbegin.rule_code.html", "BusinessMonthEnd.apply()": "reference/api/pandas.tseries.offsets.businessmonthend.apply.html", "BusinessMonthEnd.apply_index()": "reference/api/pandas.tseries.offsets.businessmonthend.apply_index.html", "BusinessMonthEnd.base": "reference/api/pandas.tseries.offsets.businessmonthend.base.html", "BusinessMonthEnd.copy()": "reference/api/pandas.tseries.offsets.businessmonthend.copy.html", "BusinessMonthEnd.freqstr": "reference/api/pandas.tseries.offsets.businessmonthend.freqstr.html", "BusinessMonthEnd.isAnchored()": "reference/api/pandas.tseries.offsets.businessmonthend.isanchored.html", "BusinessMonthEnd.kwds": "reference/api/pandas.tseries.offsets.businessmonthend.kwds.html", "BusinessMonthEnd.name": "reference/api/pandas.tseries.offsets.businessmonthend.name.html", "BusinessMonthEnd.nanos": "reference/api/pandas.tseries.offsets.businessmonthend.nanos.html", "BusinessMonthEnd.normalize": "reference/api/pandas.tseries.offsets.businessmonthend.normalize.html", "BusinessMonthEnd.onOffset()": "reference/api/pandas.tseries.offsets.businessmonthend.onoffset.html", "BusinessMonthEnd.rollback()": "reference/api/pandas.tseries.offsets.businessmonthend.rollback.html", "BusinessMonthEnd.rollforward()": "reference/api/pandas.tseries.offsets.businessmonthend.rollforward.html", "BusinessMonthEnd.rule_code": "reference/api/pandas.tseries.offsets.businessmonthend.rule_code.html", "BYearBegin.apply()": "reference/api/pandas.tseries.offsets.byearbegin.apply.html", "BYearBegin.apply_index()": "reference/api/pandas.tseries.offsets.byearbegin.apply_index.html", "BYearBegin.base": "reference/api/pandas.tseries.offsets.byearbegin.base.html", "BYearBegin.copy()": "reference/api/pandas.tseries.offsets.byearbegin.copy.html", "BYearBegin.freqstr": "reference/api/pandas.tseries.offsets.byearbegin.freqstr.html", "BYearBegin.isAnchored()": "reference/api/pandas.tseries.offsets.byearbegin.isanchored.html", "BYearBegin.kwds": "reference/api/pandas.tseries.offsets.byearbegin.kwds.html", "BYearBegin.name": "reference/api/pandas.tseries.offsets.byearbegin.name.html", "BYearBegin.nanos": "reference/api/pandas.tseries.offsets.byearbegin.nanos.html", "BYearBegin.normalize": "reference/api/pandas.tseries.offsets.byearbegin.normalize.html", "BYearBegin.onOffset()": "reference/api/pandas.tseries.offsets.byearbegin.onoffset.html", "BYearBegin.rollback()": "reference/api/pandas.tseries.offsets.byearbegin.rollback.html", "BYearBegin.rollforward()": "reference/api/pandas.tseries.offsets.byearbegin.rollforward.html", "BYearBegin.rule_code": "reference/api/pandas.tseries.offsets.byearbegin.rule_code.html", "BYearEnd.apply()": "reference/api/pandas.tseries.offsets.byearend.apply.html", "BYearEnd.apply_index()": "reference/api/pandas.tseries.offsets.byearend.apply_index.html", "BYearEnd.base": "reference/api/pandas.tseries.offsets.byearend.base.html", "BYearEnd.copy()": "reference/api/pandas.tseries.offsets.byearend.copy.html", "BYearEnd.freqstr": "reference/api/pandas.tseries.offsets.byearend.freqstr.html", "BYearEnd.isAnchored()": "reference/api/pandas.tseries.offsets.byearend.isanchored.html", "BYearEnd.kwds": "reference/api/pandas.tseries.offsets.byearend.kwds.html", "BYearEnd.name": "reference/api/pandas.tseries.offsets.byearend.name.html", "BYearEnd.nanos": "reference/api/pandas.tseries.offsets.byearend.nanos.html", "BYearEnd.normalize": "reference/api/pandas.tseries.offsets.byearend.normalize.html", "BYearEnd.onOffset()": "reference/api/pandas.tseries.offsets.byearend.onoffset.html", "BYearEnd.rollback()": "reference/api/pandas.tseries.offsets.byearend.rollback.html", "BYearEnd.rollforward()": "reference/api/pandas.tseries.offsets.byearend.rollforward.html", "BYearEnd.rule_code": "reference/api/pandas.tseries.offsets.byearend.rule_code.html", "Categorical()": "reference/api/pandas.categorical.html", "Categorical.categories": "reference/api/pandas.categorical.categories.html", "Categorical.codes": "reference/api/pandas.categorical.codes.html", "Categorical.dtype": "reference/api/pandas.categorical.dtype.html", "Categorical.from_codes()": "reference/api/pandas.categorical.from_codes.html", "Categorical.ordered": "reference/api/pandas.categorical.ordered.html", "Categorical.__array__()": "reference/api/pandas.categorical.__array__.html", "CategoricalDtype()": "reference/api/pandas.categoricaldtype.html", "CategoricalDtype.categories": "reference/api/pandas.categoricaldtype.categories.html", "CategoricalDtype.ordered": "reference/api/pandas.categoricaldtype.ordered.html", "CategoricalIndex.add_categories()": "reference/api/pandas.categoricalindex.add_categories.html", "CategoricalIndex.as_ordered()": "reference/api/pandas.categoricalindex.as_ordered.html", "CategoricalIndex.as_unordered()": "reference/api/pandas.categoricalindex.as_unordered.html", "CategoricalIndex.categories": "reference/api/pandas.categoricalindex.categories.html", "CategoricalIndex.codes": "reference/api/pandas.categoricalindex.codes.html", "CategoricalIndex.equals()": "reference/api/pandas.categoricalindex.equals.html", "CategoricalIndex.map()": "reference/api/pandas.categoricalindex.map.html", "CategoricalIndex.ordered": "reference/api/pandas.categoricalindex.ordered.html", "CategoricalIndex.remove_categories()": "reference/api/pandas.categoricalindex.remove_categories.html", "CategoricalIndex.remove_unused_categories()": "reference/api/pandas.categoricalindex.remove_unused_categories.html", "CategoricalIndex.rename_categories()": "reference/api/pandas.categoricalindex.rename_categories.html", "CategoricalIndex.reorder_categories()": "reference/api/pandas.categoricalindex.reorder_categories.html", "CategoricalIndex.set_categories()": "reference/api/pandas.categoricalindex.set_categories.html", "CategoricalIndex[source]": "reference/api/pandas.categoricalindex.html", "CBMonthBegin.apply()": "reference/api/pandas.tseries.offsets.cbmonthbegin.apply.html", "CBMonthBegin.apply_index()": "reference/api/pandas.tseries.offsets.cbmonthbegin.apply_index.html", "CBMonthBegin.base": "reference/api/pandas.tseries.offsets.cbmonthbegin.base.html", "CBMonthBegin.cbday_roll": "reference/api/pandas.tseries.offsets.cbmonthbegin.cbday_roll.html", "CBMonthBegin.copy()": "reference/api/pandas.tseries.offsets.cbmonthbegin.copy.html", "CBMonthBegin.freqstr": "reference/api/pandas.tseries.offsets.cbmonthbegin.freqstr.html", "CBMonthBegin.isAnchored()": "reference/api/pandas.tseries.offsets.cbmonthbegin.isanchored.html", "CBMonthBegin.kwds": "reference/api/pandas.tseries.offsets.cbmonthbegin.kwds.html", "CBMonthBegin.month_roll": "reference/api/pandas.tseries.offsets.cbmonthbegin.month_roll.html", "CBMonthBegin.m_offset": "reference/api/pandas.tseries.offsets.cbmonthbegin.m_offset.html", "CBMonthBegin.name": "reference/api/pandas.tseries.offsets.cbmonthbegin.name.html", "CBMonthBegin.nanos": "reference/api/pandas.tseries.offsets.cbmonthbegin.nanos.html", "CBMonthBegin.normalize": "reference/api/pandas.tseries.offsets.cbmonthbegin.normalize.html", "CBMonthBegin.offset": "reference/api/pandas.tseries.offsets.cbmonthbegin.offset.html", "CBMonthBegin.onOffset()": "reference/api/pandas.tseries.offsets.cbmonthbegin.onoffset.html", "CBMonthBegin.rollback()": "reference/api/pandas.tseries.offsets.cbmonthbegin.rollback.html", "CBMonthBegin.rollforward()": "reference/api/pandas.tseries.offsets.cbmonthbegin.rollforward.html", "CBMonthBegin.rule_code": "reference/api/pandas.tseries.offsets.cbmonthbegin.rule_code.html", "CBMonthEnd.apply()": "reference/api/pandas.tseries.offsets.cbmonthend.apply.html", "CBMonthEnd.apply_index()": "reference/api/pandas.tseries.offsets.cbmonthend.apply_index.html", "CBMonthEnd.base": "reference/api/pandas.tseries.offsets.cbmonthend.base.html", "CBMonthEnd.cbday_roll": "reference/api/pandas.tseries.offsets.cbmonthend.cbday_roll.html", "CBMonthEnd.copy()": "reference/api/pandas.tseries.offsets.cbmonthend.copy.html", "CBMonthEnd.freqstr": "reference/api/pandas.tseries.offsets.cbmonthend.freqstr.html", "CBMonthEnd.isAnchored()": "reference/api/pandas.tseries.offsets.cbmonthend.isanchored.html", "CBMonthEnd.kwds": "reference/api/pandas.tseries.offsets.cbmonthend.kwds.html", "CBMonthEnd.month_roll": "reference/api/pandas.tseries.offsets.cbmonthend.month_roll.html", "CBMonthEnd.m_offset": "reference/api/pandas.tseries.offsets.cbmonthend.m_offset.html", "CBMonthEnd.name": "reference/api/pandas.tseries.offsets.cbmonthend.name.html", "CBMonthEnd.nanos": "reference/api/pandas.tseries.offsets.cbmonthend.nanos.html", "CBMonthEnd.normalize": "reference/api/pandas.tseries.offsets.cbmonthend.normalize.html", "CBMonthEnd.offset": "reference/api/pandas.tseries.offsets.cbmonthend.offset.html", "CBMonthEnd.onOffset()": "reference/api/pandas.tseries.offsets.cbmonthend.onoffset.html", "CBMonthEnd.rollback()": "reference/api/pandas.tseries.offsets.cbmonthend.rollback.html", "CBMonthEnd.rollforward()": "reference/api/pandas.tseries.offsets.cbmonthend.rollforward.html", "CBMonthEnd.rule_code": "reference/api/pandas.tseries.offsets.cbmonthend.rule_code.html", "CDay.apply()": "reference/api/pandas.tseries.offsets.cday.apply.html", "CDay.apply_index()": "reference/api/pandas.tseries.offsets.cday.apply_index.html", "CDay.base": "reference/api/pandas.tseries.offsets.cday.base.html", "CDay.copy()": "reference/api/pandas.tseries.offsets.cday.copy.html", "CDay.freqstr": "reference/api/pandas.tseries.offsets.cday.freqstr.html", "CDay.isAnchored()": "reference/api/pandas.tseries.offsets.cday.isanchored.html", "CDay.kwds": "reference/api/pandas.tseries.offsets.cday.kwds.html", "CDay.name": "reference/api/pandas.tseries.offsets.cday.name.html", "CDay.nanos": "reference/api/pandas.tseries.offsets.cday.nanos.html", "CDay.normalize": "reference/api/pandas.tseries.offsets.cday.normalize.html", "CDay.offset": "reference/api/pandas.tseries.offsets.cday.offset.html", "CDay.onOffset()": "reference/api/pandas.tseries.offsets.cday.onoffset.html", "CDay.rollback()": "reference/api/pandas.tseries.offsets.cday.rollback.html", "CDay.rollforward()": "reference/api/pandas.tseries.offsets.cday.rollforward.html", "CDay.rule_code": "reference/api/pandas.tseries.offsets.cday.rule_code.html", "CustomBusinessDay.apply()": "reference/api/pandas.tseries.offsets.custombusinessday.apply.html", "CustomBusinessDay.apply_index()": "reference/api/pandas.tseries.offsets.custombusinessday.apply_index.html", "CustomBusinessDay.base": "reference/api/pandas.tseries.offsets.custombusinessday.base.html", "CustomBusinessDay.copy()": "reference/api/pandas.tseries.offsets.custombusinessday.copy.html", "CustomBusinessDay.freqstr": "reference/api/pandas.tseries.offsets.custombusinessday.freqstr.html", "CustomBusinessDay.isAnchored()": "reference/api/pandas.tseries.offsets.custombusinessday.isanchored.html", "CustomBusinessDay.kwds": "reference/api/pandas.tseries.offsets.custombusinessday.kwds.html", "CustomBusinessDay.name": "reference/api/pandas.tseries.offsets.custombusinessday.name.html", "CustomBusinessDay.nanos": "reference/api/pandas.tseries.offsets.custombusinessday.nanos.html", "CustomBusinessDay.normalize": "reference/api/pandas.tseries.offsets.custombusinessday.normalize.html", "CustomBusinessDay.offset": "reference/api/pandas.tseries.offsets.custombusinessday.offset.html", "CustomBusinessDay.onOffset()": "reference/api/pandas.tseries.offsets.custombusinessday.onoffset.html", "CustomBusinessDay.rollback()": "reference/api/pandas.tseries.offsets.custombusinessday.rollback.html", "CustomBusinessDay.rollforward()": "reference/api/pandas.tseries.offsets.custombusinessday.rollforward.html", "CustomBusinessDay.rule_code": "reference/api/pandas.tseries.offsets.custombusinessday.rule_code.html", "CustomBusinessHour.apply()": "reference/api/pandas.tseries.offsets.custombusinesshour.apply.html", "CustomBusinessHour.apply_index()": "reference/api/pandas.tseries.offsets.custombusinesshour.apply_index.html", "CustomBusinessHour.base": "reference/api/pandas.tseries.offsets.custombusinesshour.base.html", "CustomBusinessHour.copy()": "reference/api/pandas.tseries.offsets.custombusinesshour.copy.html", "CustomBusinessHour.freqstr": "reference/api/pandas.tseries.offsets.custombusinesshour.freqstr.html", "CustomBusinessHour.isAnchored()": "reference/api/pandas.tseries.offsets.custombusinesshour.isanchored.html", "CustomBusinessHour.kwds": "reference/api/pandas.tseries.offsets.custombusinesshour.kwds.html", "CustomBusinessHour.name": "reference/api/pandas.tseries.offsets.custombusinesshour.name.html", "CustomBusinessHour.nanos": "reference/api/pandas.tseries.offsets.custombusinesshour.nanos.html", "CustomBusinessHour.next_bday": "reference/api/pandas.tseries.offsets.custombusinesshour.next_bday.html", "CustomBusinessHour.normalize": "reference/api/pandas.tseries.offsets.custombusinesshour.normalize.html", "CustomBusinessHour.offset": "reference/api/pandas.tseries.offsets.custombusinesshour.offset.html", "CustomBusinessHour.onOffset()": "reference/api/pandas.tseries.offsets.custombusinesshour.onoffset.html", "CustomBusinessHour.rollback()": "reference/api/pandas.tseries.offsets.custombusinesshour.rollback.html", "CustomBusinessHour.rollforward()": "reference/api/pandas.tseries.offsets.custombusinesshour.rollforward.html", "CustomBusinessHour.rule_code": "reference/api/pandas.tseries.offsets.custombusinesshour.rule_code.html", "CustomBusinessMonthBegin.apply()": "reference/api/pandas.tseries.offsets.custombusinessmonthbegin.apply.html", "CustomBusinessMonthBegin.apply_index()": "reference/api/pandas.tseries.offsets.custombusinessmonthbegin.apply_index.html", "CustomBusinessMonthBegin.base": "reference/api/pandas.tseries.offsets.custombusinessmonthbegin.base.html", "CustomBusinessMonthBegin.cbday_roll": "reference/api/pandas.tseries.offsets.custombusinessmonthbegin.cbday_roll.html", "CustomBusinessMonthBegin.copy()": "reference/api/pandas.tseries.offsets.custombusinessmonthbegin.copy.html", "CustomBusinessMonthBegin.freqstr": "reference/api/pandas.tseries.offsets.custombusinessmonthbegin.freqstr.html", "CustomBusinessMonthBegin.isAnchored()": "reference/api/pandas.tseries.offsets.custombusinessmonthbegin.isanchored.html", "CustomBusinessMonthBegin.kwds": "reference/api/pandas.tseries.offsets.custombusinessmonthbegin.kwds.html", "CustomBusinessMonthBegin.month_roll": "reference/api/pandas.tseries.offsets.custombusinessmonthbegin.month_roll.html", "CustomBusinessMonthBegin.m_offset": "reference/api/pandas.tseries.offsets.custombusinessmonthbegin.m_offset.html", "CustomBusinessMonthBegin.name": "reference/api/pandas.tseries.offsets.custombusinessmonthbegin.name.html", "CustomBusinessMonthBegin.nanos": "reference/api/pandas.tseries.offsets.custombusinessmonthbegin.nanos.html", "CustomBusinessMonthBegin.normalize": "reference/api/pandas.tseries.offsets.custombusinessmonthbegin.normalize.html", "CustomBusinessMonthBegin.offset": "reference/api/pandas.tseries.offsets.custombusinessmonthbegin.offset.html", "CustomBusinessMonthBegin.onOffset()": "reference/api/pandas.tseries.offsets.custombusinessmonthbegin.onoffset.html", "CustomBusinessMonthBegin.rollback()": "reference/api/pandas.tseries.offsets.custombusinessmonthbegin.rollback.html", "CustomBusinessMonthBegin.rollforward()": "reference/api/pandas.tseries.offsets.custombusinessmonthbegin.rollforward.html", "CustomBusinessMonthBegin.rule_code": "reference/api/pandas.tseries.offsets.custombusinessmonthbegin.rule_code.html", "CustomBusinessMonthEnd.apply()": "reference/api/pandas.tseries.offsets.custombusinessmonthend.apply.html", "CustomBusinessMonthEnd.apply_index()": "reference/api/pandas.tseries.offsets.custombusinessmonthend.apply_index.html", "CustomBusinessMonthEnd.base": "reference/api/pandas.tseries.offsets.custombusinessmonthend.base.html", "CustomBusinessMonthEnd.cbday_roll": "reference/api/pandas.tseries.offsets.custombusinessmonthend.cbday_roll.html", "CustomBusinessMonthEnd.copy()": "reference/api/pandas.tseries.offsets.custombusinessmonthend.copy.html", "CustomBusinessMonthEnd.freqstr": "reference/api/pandas.tseries.offsets.custombusinessmonthend.freqstr.html", "CustomBusinessMonthEnd.isAnchored()": "reference/api/pandas.tseries.offsets.custombusinessmonthend.isanchored.html", "CustomBusinessMonthEnd.kwds": "reference/api/pandas.tseries.offsets.custombusinessmonthend.kwds.html", "CustomBusinessMonthEnd.month_roll": "reference/api/pandas.tseries.offsets.custombusinessmonthend.month_roll.html", "CustomBusinessMonthEnd.m_offset": "reference/api/pandas.tseries.offsets.custombusinessmonthend.m_offset.html", "CustomBusinessMonthEnd.name": "reference/api/pandas.tseries.offsets.custombusinessmonthend.name.html", "CustomBusinessMonthEnd.nanos": "reference/api/pandas.tseries.offsets.custombusinessmonthend.nanos.html", "CustomBusinessMonthEnd.normalize": "reference/api/pandas.tseries.offsets.custombusinessmonthend.normalize.html", "CustomBusinessMonthEnd.offset": "reference/api/pandas.tseries.offsets.custombusinessmonthend.offset.html", "CustomBusinessMonthEnd.onOffset()": "reference/api/pandas.tseries.offsets.custombusinessmonthend.onoffset.html", "CustomBusinessMonthEnd.rollback()": "reference/api/pandas.tseries.offsets.custombusinessmonthend.rollback.html", "CustomBusinessMonthEnd.rollforward()": "reference/api/pandas.tseries.offsets.custombusinessmonthend.rollforward.html", "CustomBusinessMonthEnd.rule_code": "reference/api/pandas.tseries.offsets.custombusinessmonthend.rule_code.html", "DataFrame": "reference/frame.html", "DataFrame()": "reference/api/pandas.dataframe.html", "DataFrame.abs()": "reference/api/pandas.dataframe.abs.html", "DataFrame.add()": "reference/api/pandas.dataframe.add.html", "DataFrame.add_prefix()": "reference/api/pandas.dataframe.add_prefix.html", "DataFrame.add_suffix()": "reference/api/pandas.dataframe.add_suffix.html", "DataFrame.agg()": "reference/api/pandas.dataframe.agg.html", "DataFrame.aggregate()": "reference/api/pandas.dataframe.aggregate.html", "DataFrame.align()": "reference/api/pandas.dataframe.align.html", "DataFrame.all()": "reference/api/pandas.dataframe.all.html", "DataFrame.any()": "reference/api/pandas.dataframe.any.html", "DataFrame.append()": "reference/api/pandas.dataframe.append.html", "DataFrame.apply()": "reference/api/pandas.dataframe.apply.html", "DataFrame.applymap()": "reference/api/pandas.dataframe.applymap.html", "DataFrame.asfreq()": "reference/api/pandas.dataframe.asfreq.html", "DataFrame.asof()": "reference/api/pandas.dataframe.asof.html", "DataFrame.assign()": "reference/api/pandas.dataframe.assign.html", "DataFrame.astype()": "reference/api/pandas.dataframe.astype.html", "DataFrame.as_blocks()": "reference/api/pandas.dataframe.as_blocks.html", "DataFrame.as_matrix()": "reference/api/pandas.dataframe.as_matrix.html", "DataFrame.at": "reference/api/pandas.dataframe.at.html", "DataFrame.at_time()": "reference/api/pandas.dataframe.at_time.html", "DataFrame.axes": "reference/api/pandas.dataframe.axes.html", "DataFrame.between_time()": "reference/api/pandas.dataframe.between_time.html", "DataFrame.bfill()": "reference/api/pandas.dataframe.bfill.html", "DataFrame.blocks": "reference/api/pandas.dataframe.blocks.html", "DataFrame.bool()": "reference/api/pandas.dataframe.bool.html", "DataFrame.boxplot()": "reference/api/pandas.dataframe.boxplot.html", "DataFrame.clip()": "reference/api/pandas.dataframe.clip.html", "DataFrame.clip_lower()": "reference/api/pandas.dataframe.clip_lower.html", "DataFrame.clip_upper()": "reference/api/pandas.dataframe.clip_upper.html", "DataFrame.columns": "reference/api/pandas.dataframe.columns.html", "DataFrame.combine()": "reference/api/pandas.dataframe.combine.html", "DataFrame.combine_first()": "reference/api/pandas.dataframe.combine_first.html", "DataFrame.compound()": "reference/api/pandas.dataframe.compound.html", "DataFrame.copy()": "reference/api/pandas.dataframe.copy.html", "DataFrame.corr()": "reference/api/pandas.dataframe.corr.html", "DataFrame.corrwith()": "reference/api/pandas.dataframe.corrwith.html", "DataFrame.count()": "reference/api/pandas.dataframe.count.html", "DataFrame.cov()": "reference/api/pandas.dataframe.cov.html", "DataFrame.cummax()": "reference/api/pandas.dataframe.cummax.html", "DataFrame.cummin()": "reference/api/pandas.dataframe.cummin.html", "DataFrame.cumprod()": "reference/api/pandas.dataframe.cumprod.html", "DataFrame.cumsum()": "reference/api/pandas.dataframe.cumsum.html", "DataFrame.describe()": "reference/api/pandas.dataframe.describe.html", "DataFrame.diff()": "reference/api/pandas.dataframe.diff.html", "DataFrame.div()": "reference/api/pandas.dataframe.div.html", "DataFrame.divide()": "reference/api/pandas.dataframe.divide.html", "DataFrame.dot()": "reference/api/pandas.dataframe.dot.html", "DataFrame.drop()": "reference/api/pandas.dataframe.drop.html", "DataFrame.droplevel()": "reference/api/pandas.dataframe.droplevel.html", "DataFrame.dropna()": "reference/api/pandas.dataframe.dropna.html", "DataFrame.drop_duplicates()": "reference/api/pandas.dataframe.drop_duplicates.html", "DataFrame.dtypes": "reference/api/pandas.dataframe.dtypes.html", "DataFrame.duplicated()": "reference/api/pandas.dataframe.duplicated.html", "DataFrame.empty": "reference/api/pandas.dataframe.empty.html", "DataFrame.eq()": "reference/api/pandas.dataframe.eq.html", "DataFrame.equals()": "reference/api/pandas.dataframe.equals.html", "DataFrame.eval()": "reference/api/pandas.dataframe.eval.html", "DataFrame.ewm()": "reference/api/pandas.dataframe.ewm.html", "DataFrame.expanding()": "reference/api/pandas.dataframe.expanding.html", "DataFrame.explode()": "reference/api/pandas.dataframe.explode.html", "DataFrame.ffill()": "reference/api/pandas.dataframe.ffill.html", "DataFrame.fillna()": "reference/api/pandas.dataframe.fillna.html", "DataFrame.filter()": "reference/api/pandas.dataframe.filter.html", "DataFrame.first()": "reference/api/pandas.dataframe.first.html", "DataFrame.first_valid_index()": "reference/api/pandas.dataframe.first_valid_index.html", "DataFrame.floordiv()": "reference/api/pandas.dataframe.floordiv.html", "DataFrame.from_dict()": "reference/api/pandas.dataframe.from_dict.html", "DataFrame.from_items()": "reference/api/pandas.dataframe.from_items.html", "DataFrame.from_records()": "reference/api/pandas.dataframe.from_records.html", "DataFrame.ftypes": "reference/api/pandas.dataframe.ftypes.html", "DataFrame.ge()": "reference/api/pandas.dataframe.ge.html", "DataFrame.get()": "reference/api/pandas.dataframe.get.html", "DataFrame.get_dtype_counts()": "reference/api/pandas.dataframe.get_dtype_counts.html", "DataFrame.get_ftype_counts()": "reference/api/pandas.dataframe.get_ftype_counts.html", "DataFrame.get_value()": "reference/api/pandas.dataframe.get_value.html", "DataFrame.get_values()": "reference/api/pandas.dataframe.get_values.html", "DataFrame.groupby()": "reference/api/pandas.dataframe.groupby.html", "DataFrame.gt()": "reference/api/pandas.dataframe.gt.html", "DataFrame.head()": "reference/api/pandas.dataframe.head.html", "DataFrame.hist()": "reference/api/pandas.dataframe.hist.html", "DataFrame.iat": "reference/api/pandas.dataframe.iat.html", "DataFrame.idxmax()": "reference/api/pandas.dataframe.idxmax.html", "DataFrame.idxmin()": "reference/api/pandas.dataframe.idxmin.html", "DataFrame.iloc": "reference/api/pandas.dataframe.iloc.html", "DataFrame.index": "reference/api/pandas.dataframe.index.html", "DataFrame.infer_objects()": "reference/api/pandas.dataframe.infer_objects.html", "DataFrame.info()": "reference/api/pandas.dataframe.info.html", "DataFrame.insert()": "reference/api/pandas.dataframe.insert.html", "DataFrame.interpolate()": "reference/api/pandas.dataframe.interpolate.html", "DataFrame.isin()": "reference/api/pandas.dataframe.isin.html", "DataFrame.isna()": "reference/api/pandas.dataframe.isna.html", "DataFrame.isnull()": "reference/api/pandas.dataframe.isnull.html", "DataFrame.is_copy": "reference/api/pandas.dataframe.is_copy.html", "DataFrame.items()": "reference/api/pandas.dataframe.items.html", "DataFrame.iteritems()": "reference/api/pandas.dataframe.iteritems.html", "DataFrame.iterrows()": "reference/api/pandas.dataframe.iterrows.html", "DataFrame.itertuples()": "reference/api/pandas.dataframe.itertuples.html", "DataFrame.ix": "reference/api/pandas.dataframe.ix.html", "DataFrame.join()": "reference/api/pandas.dataframe.join.html", "DataFrame.keys()": "reference/api/pandas.dataframe.keys.html", "DataFrame.kurt()": "reference/api/pandas.dataframe.kurt.html", "DataFrame.kurtosis()": "reference/api/pandas.dataframe.kurtosis.html", "DataFrame.last()": "reference/api/pandas.dataframe.last.html", "DataFrame.last_valid_index()": "reference/api/pandas.dataframe.last_valid_index.html", "DataFrame.le()": "reference/api/pandas.dataframe.le.html", "DataFrame.loc": "reference/api/pandas.dataframe.loc.html", "DataFrame.lookup()": "reference/api/pandas.dataframe.lookup.html", "DataFrame.lt()": "reference/api/pandas.dataframe.lt.html", "DataFrame.mad()": "reference/api/pandas.dataframe.mad.html", "DataFrame.mask()": "reference/api/pandas.dataframe.mask.html", "DataFrame.max()": "reference/api/pandas.dataframe.max.html", "DataFrame.mean()": "reference/api/pandas.dataframe.mean.html", "DataFrame.median()": "reference/api/pandas.dataframe.median.html", "DataFrame.melt()": "reference/api/pandas.dataframe.melt.html", "DataFrame.memory_usage()": "reference/api/pandas.dataframe.memory_usage.html", "DataFrame.merge()": "reference/api/pandas.dataframe.merge.html", "DataFrame.min()": "reference/api/pandas.dataframe.min.html", "DataFrame.mod()": "reference/api/pandas.dataframe.mod.html", "DataFrame.mode()": "reference/api/pandas.dataframe.mode.html", "DataFrame.mul()": "reference/api/pandas.dataframe.mul.html", "DataFrame.multiply()": "reference/api/pandas.dataframe.multiply.html", "DataFrame.ndim": "reference/api/pandas.dataframe.ndim.html", "DataFrame.ne()": "reference/api/pandas.dataframe.ne.html", "DataFrame.nlargest()": "reference/api/pandas.dataframe.nlargest.html", "DataFrame.notna()": "reference/api/pandas.dataframe.notna.html", "DataFrame.notnull()": "reference/api/pandas.dataframe.notnull.html", "DataFrame.nsmallest()": "reference/api/pandas.dataframe.nsmallest.html", "DataFrame.nunique()": "reference/api/pandas.dataframe.nunique.html", "DataFrame.pct_change()": "reference/api/pandas.dataframe.pct_change.html", "DataFrame.pipe()": "reference/api/pandas.dataframe.pipe.html", "DataFrame.pivot()": "reference/api/pandas.dataframe.pivot.html", "DataFrame.pivot_table()": "reference/api/pandas.dataframe.pivot_table.html", "DataFrame.plot()": "reference/api/pandas.dataframe.plot.html", "DataFrame.plot.area()": "reference/api/pandas.dataframe.plot.area.html", "DataFrame.plot.bar()": "reference/api/pandas.dataframe.plot.bar.html", "DataFrame.plot.barh()": "reference/api/pandas.dataframe.plot.barh.html", "DataFrame.plot.box()": "reference/api/pandas.dataframe.plot.box.html", "DataFrame.plot.density()": "reference/api/pandas.dataframe.plot.density.html", "DataFrame.plot.hexbin()": "reference/api/pandas.dataframe.plot.hexbin.html", "DataFrame.plot.hist()": "reference/api/pandas.dataframe.plot.hist.html", "DataFrame.plot.kde()": "reference/api/pandas.dataframe.plot.kde.html", "DataFrame.plot.line()": "reference/api/pandas.dataframe.plot.line.html", "DataFrame.plot.pie()": "reference/api/pandas.dataframe.plot.pie.html", "DataFrame.plot.scatter()": "reference/api/pandas.dataframe.plot.scatter.html", "DataFrame.pop()": "reference/api/pandas.dataframe.pop.html", "DataFrame.pow()": "reference/api/pandas.dataframe.pow.html", "DataFrame.prod()": "reference/api/pandas.dataframe.prod.html", "DataFrame.product()": "reference/api/pandas.dataframe.product.html", "DataFrame.quantile()": "reference/api/pandas.dataframe.quantile.html", "DataFrame.query()": "reference/api/pandas.dataframe.query.html", "DataFrame.radd()": "reference/api/pandas.dataframe.radd.html", "DataFrame.rank()": "reference/api/pandas.dataframe.rank.html", "DataFrame.rdiv()": "reference/api/pandas.dataframe.rdiv.html", "DataFrame.reindex()": "reference/api/pandas.dataframe.reindex.html", "DataFrame.reindex_like()": "reference/api/pandas.dataframe.reindex_like.html", "DataFrame.rename()": "reference/api/pandas.dataframe.rename.html", "DataFrame.rename_axis()": "reference/api/pandas.dataframe.rename_axis.html", "DataFrame.reorder_levels()": "reference/api/pandas.dataframe.reorder_levels.html", "DataFrame.replace()": "reference/api/pandas.dataframe.replace.html", "DataFrame.resample()": "reference/api/pandas.dataframe.resample.html", "DataFrame.reset_index()": "reference/api/pandas.dataframe.reset_index.html", "DataFrame.rfloordiv()": "reference/api/pandas.dataframe.rfloordiv.html", "DataFrame.rmod()": "reference/api/pandas.dataframe.rmod.html", "DataFrame.rmul()": "reference/api/pandas.dataframe.rmul.html", "DataFrame.rolling()": "reference/api/pandas.dataframe.rolling.html", "DataFrame.round()": "reference/api/pandas.dataframe.round.html", "DataFrame.rpow()": "reference/api/pandas.dataframe.rpow.html", "DataFrame.rsub()": "reference/api/pandas.dataframe.rsub.html", "DataFrame.rtruediv()": "reference/api/pandas.dataframe.rtruediv.html", "DataFrame.sample()": "reference/api/pandas.dataframe.sample.html", "DataFrame.select_dtypes()": "reference/api/pandas.dataframe.select_dtypes.html", "DataFrame.sem()": "reference/api/pandas.dataframe.sem.html", "DataFrame.set_axis()": "reference/api/pandas.dataframe.set_axis.html", "DataFrame.set_index()": "reference/api/pandas.dataframe.set_index.html", "DataFrame.set_value()": "reference/api/pandas.dataframe.set_value.html", "DataFrame.shape": "reference/api/pandas.dataframe.shape.html", "DataFrame.shift()": "reference/api/pandas.dataframe.shift.html", "DataFrame.size": "reference/api/pandas.dataframe.size.html", "DataFrame.skew()": "reference/api/pandas.dataframe.skew.html", "DataFrame.slice_shift()": "reference/api/pandas.dataframe.slice_shift.html", "DataFrame.sort_index()": "reference/api/pandas.dataframe.sort_index.html", "DataFrame.sort_values()": "reference/api/pandas.dataframe.sort_values.html", "DataFrame.sparse()": "reference/api/pandas.dataframe.sparse.html", "DataFrame.sparse.density": "reference/api/pandas.dataframe.sparse.density.html", "DataFrame.squeeze()": "reference/api/pandas.dataframe.squeeze.html", "DataFrame.stack()": "reference/api/pandas.dataframe.stack.html", "DataFrame.std()": "reference/api/pandas.dataframe.std.html", "DataFrame.style": "reference/api/pandas.dataframe.style.html", "DataFrame.sub()": "reference/api/pandas.dataframe.sub.html", "DataFrame.subtract()": "reference/api/pandas.dataframe.subtract.html", "DataFrame.sum()": "reference/api/pandas.dataframe.sum.html", "DataFrame.swapaxes()": "reference/api/pandas.dataframe.swapaxes.html", "DataFrame.swaplevel()": "reference/api/pandas.dataframe.swaplevel.html", "DataFrame.T": "reference/api/pandas.dataframe.t.html", "DataFrame.tail()": "reference/api/pandas.dataframe.tail.html", "DataFrame.take()": "reference/api/pandas.dataframe.take.html", "DataFrame.to_clipboard()": "reference/api/pandas.dataframe.to_clipboard.html", "DataFrame.to_csv()": "reference/api/pandas.dataframe.to_csv.html", "DataFrame.to_dense()": "reference/api/pandas.dataframe.to_dense.html", "DataFrame.to_dict()": "reference/api/pandas.dataframe.to_dict.html", "DataFrame.to_excel()": "reference/api/pandas.dataframe.to_excel.html", "DataFrame.to_feather()": "reference/api/pandas.dataframe.to_feather.html", "DataFrame.to_gbq()": "reference/api/pandas.dataframe.to_gbq.html", "DataFrame.to_hdf()": "reference/api/pandas.dataframe.to_hdf.html", "DataFrame.to_html()": "reference/api/pandas.dataframe.to_html.html", "DataFrame.to_json()": "reference/api/pandas.dataframe.to_json.html", "DataFrame.to_latex()": "reference/api/pandas.dataframe.to_latex.html", "DataFrame.to_msgpack()": "reference/api/pandas.dataframe.to_msgpack.html", "DataFrame.to_numpy()": "reference/api/pandas.dataframe.to_numpy.html", "DataFrame.to_parquet()": "reference/api/pandas.dataframe.to_parquet.html", "DataFrame.to_period()": "reference/api/pandas.dataframe.to_period.html", "DataFrame.to_pickle()": "reference/api/pandas.dataframe.to_pickle.html", "DataFrame.to_records()": "reference/api/pandas.dataframe.to_records.html", "DataFrame.to_sparse()": "reference/api/pandas.dataframe.to_sparse.html", "DataFrame.to_sql()": "reference/api/pandas.dataframe.to_sql.html", "DataFrame.to_stata()": "reference/api/pandas.dataframe.to_stata.html", "DataFrame.to_string()": "reference/api/pandas.dataframe.to_string.html", "DataFrame.to_timestamp()": "reference/api/pandas.dataframe.to_timestamp.html", "DataFrame.to_xarray()": "reference/api/pandas.dataframe.to_xarray.html", "DataFrame.transform()": "reference/api/pandas.dataframe.transform.html", "DataFrame.transpose()": "reference/api/pandas.dataframe.transpose.html", "DataFrame.truediv()": "reference/api/pandas.dataframe.truediv.html", "DataFrame.truncate()": "reference/api/pandas.dataframe.truncate.html", "DataFrame.tshift()": "reference/api/pandas.dataframe.tshift.html", "DataFrame.tz_convert()": "reference/api/pandas.dataframe.tz_convert.html", "DataFrame.tz_localize()": "reference/api/pandas.dataframe.tz_localize.html", "DataFrame.unstack()": "reference/api/pandas.dataframe.unstack.html", "DataFrame.update()": "reference/api/pandas.dataframe.update.html", "DataFrame.values": "reference/api/pandas.dataframe.values.html", "DataFrame.var()": "reference/api/pandas.dataframe.var.html", "DataFrame.where()": "reference/api/pandas.dataframe.where.html", "DataFrame.xs()": "reference/api/pandas.dataframe.xs.html", "DataFrame.__iter__()": "reference/api/pandas.dataframe.__iter__.html", "DataFrameGroupBy.all()": "reference/api/pandas.core.groupby.dataframegroupby.all.html", "DataFrameGroupBy.any()": "reference/api/pandas.core.groupby.dataframegroupby.any.html", "DataFrameGroupBy.bfill()": "reference/api/pandas.core.groupby.dataframegroupby.bfill.html", "DataFrameGroupBy.boxplot()": "reference/api/pandas.core.groupby.dataframegroupby.boxplot.html", "DataFrameGroupBy.corr": "reference/api/pandas.core.groupby.dataframegroupby.corr.html", "DataFrameGroupBy.corrwith": "reference/api/pandas.core.groupby.dataframegroupby.corrwith.html", "DataFrameGroupBy.count()": "reference/api/pandas.core.groupby.dataframegroupby.count.html", "DataFrameGroupBy.cov": "reference/api/pandas.core.groupby.dataframegroupby.cov.html", "DataFrameGroupBy.cummax()": "reference/api/pandas.core.groupby.dataframegroupby.cummax.html", "DataFrameGroupBy.cummin()": "reference/api/pandas.core.groupby.dataframegroupby.cummin.html", "DataFrameGroupBy.cumprod()": "reference/api/pandas.core.groupby.dataframegroupby.cumprod.html", "DataFrameGroupBy.cumsum()": "reference/api/pandas.core.groupby.dataframegroupby.cumsum.html", "DataFrameGroupBy.describe()": "reference/api/pandas.core.groupby.dataframegroupby.describe.html", "DataFrameGroupBy.diff": "reference/api/pandas.core.groupby.dataframegroupby.diff.html", "DataFrameGroupBy.ffill()": "reference/api/pandas.core.groupby.dataframegroupby.ffill.html", "DataFrameGroupBy.fillna": "reference/api/pandas.core.groupby.dataframegroupby.fillna.html", "DataFrameGroupBy.filter()": "reference/api/pandas.core.groupby.dataframegroupby.filter.html", "DataFrameGroupBy.hist": "reference/api/pandas.core.groupby.dataframegroupby.hist.html", "DataFrameGroupBy.idxmax": "reference/api/pandas.core.groupby.dataframegroupby.idxmax.html", "DataFrameGroupBy.idxmin": "reference/api/pandas.core.groupby.dataframegroupby.idxmin.html", "DataFrameGroupBy.mad": "reference/api/pandas.core.groupby.dataframegroupby.mad.html", "DataFrameGroupBy.nunique()": "reference/api/pandas.core.groupby.dataframegroupby.nunique.html", "DataFrameGroupBy.pct_change()": "reference/api/pandas.core.groupby.dataframegroupby.pct_change.html", "DataFrameGroupBy.plot": "reference/api/pandas.core.groupby.dataframegroupby.plot.html", "DataFrameGroupBy.quantile()": "reference/api/pandas.core.groupby.dataframegroupby.quantile.html", "DataFrameGroupBy.rank()": "reference/api/pandas.core.groupby.dataframegroupby.rank.html", "DataFrameGroupBy.resample()": "reference/api/pandas.core.groupby.dataframegroupby.resample.html", "DataFrameGroupBy.shift()": "reference/api/pandas.core.groupby.dataframegroupby.shift.html", "DataFrameGroupBy.size()": "reference/api/pandas.core.groupby.dataframegroupby.size.html", "DataFrameGroupBy.skew": "reference/api/pandas.core.groupby.dataframegroupby.skew.html", "DataFrameGroupBy.take": "reference/api/pandas.core.groupby.dataframegroupby.take.html", "DataFrameGroupBy.tshift": "reference/api/pandas.core.groupby.dataframegroupby.tshift.html", "Date offsets": "reference/offset_frequency.html", "DateOffset.apply()": "reference/api/pandas.tseries.offsets.dateoffset.apply.html", "DateOffset.apply_index()": "reference/api/pandas.tseries.offsets.dateoffset.apply_index.html", "DateOffset.base": "reference/api/pandas.tseries.offsets.dateoffset.base.html", "DateOffset.copy()": "reference/api/pandas.tseries.offsets.dateoffset.copy.html", "DateOffset.freqstr": "reference/api/pandas.tseries.offsets.dateoffset.freqstr.html", "DateOffset.isAnchored()": "reference/api/pandas.tseries.offsets.dateoffset.isanchored.html", "DateOffset.kwds": "reference/api/pandas.tseries.offsets.dateoffset.kwds.html", "DateOffset.name": "reference/api/pandas.tseries.offsets.dateoffset.name.html", "DateOffset.nanos": "reference/api/pandas.tseries.offsets.dateoffset.nanos.html", "DateOffset.normalize": "reference/api/pandas.tseries.offsets.dateoffset.normalize.html", "DateOffset.onOffset()": "reference/api/pandas.tseries.offsets.dateoffset.onoffset.html", "DateOffset.rollback()": "reference/api/pandas.tseries.offsets.dateoffset.rollback.html", "DateOffset.rollforward()": "reference/api/pandas.tseries.offsets.dateoffset.rollforward.html", "DateOffset.rule_code": "reference/api/pandas.tseries.offsets.dateoffset.rule_code.html", "DatetimeIndex.ceil()": "reference/api/pandas.datetimeindex.ceil.html", "DatetimeIndex.date": "reference/api/pandas.datetimeindex.date.html", "DatetimeIndex.day": "reference/api/pandas.datetimeindex.day.html", "DatetimeIndex.dayofweek": "reference/api/pandas.datetimeindex.dayofweek.html", "DatetimeIndex.dayofyear": "reference/api/pandas.datetimeindex.dayofyear.html", "DatetimeIndex.day_name()": "reference/api/pandas.datetimeindex.day_name.html", "DatetimeIndex.floor()": "reference/api/pandas.datetimeindex.floor.html", "DatetimeIndex.freq": "reference/api/pandas.datetimeindex.freq.html", "DatetimeIndex.freqstr": "reference/api/pandas.datetimeindex.freqstr.html", "DatetimeIndex.hour": "reference/api/pandas.datetimeindex.hour.html", "DatetimeIndex.indexer_at_time()": "reference/api/pandas.datetimeindex.indexer_at_time.html", "DatetimeIndex.indexer_between_time()": "reference/api/pandas.datetimeindex.indexer_between_time.html", "DatetimeIndex.inferred_freq": "reference/api/pandas.datetimeindex.inferred_freq.html", "DatetimeIndex.is_leap_year": "reference/api/pandas.datetimeindex.is_leap_year.html", "DatetimeIndex.is_month_end": "reference/api/pandas.datetimeindex.is_month_end.html", "DatetimeIndex.is_month_start": "reference/api/pandas.datetimeindex.is_month_start.html", "DatetimeIndex.is_quarter_end": "reference/api/pandas.datetimeindex.is_quarter_end.html", "DatetimeIndex.is_quarter_start": "reference/api/pandas.datetimeindex.is_quarter_start.html", "DatetimeIndex.is_year_end": "reference/api/pandas.datetimeindex.is_year_end.html", "DatetimeIndex.is_year_start": "reference/api/pandas.datetimeindex.is_year_start.html", "DatetimeIndex.mean()": "reference/api/pandas.datetimeindex.mean.html", "DatetimeIndex.microsecond": "reference/api/pandas.datetimeindex.microsecond.html", "DatetimeIndex.minute": "reference/api/pandas.datetimeindex.minute.html", "DatetimeIndex.month": "reference/api/pandas.datetimeindex.month.html", "DatetimeIndex.month_name()": "reference/api/pandas.datetimeindex.month_name.html", "DatetimeIndex.nanosecond": "reference/api/pandas.datetimeindex.nanosecond.html", "DatetimeIndex.normalize()": "reference/api/pandas.datetimeindex.normalize.html", "DatetimeIndex.quarter": "reference/api/pandas.datetimeindex.quarter.html", "DatetimeIndex.round()": "reference/api/pandas.datetimeindex.round.html", "DatetimeIndex.second": "reference/api/pandas.datetimeindex.second.html", "DatetimeIndex.snap()": "reference/api/pandas.datetimeindex.snap.html", "DatetimeIndex.strftime()": "reference/api/pandas.datetimeindex.strftime.html", "DatetimeIndex.time": "reference/api/pandas.datetimeindex.time.html", "DatetimeIndex.timetz": "reference/api/pandas.datetimeindex.timetz.html", "DatetimeIndex.to_frame()": "reference/api/pandas.datetimeindex.to_frame.html", "DatetimeIndex.to_period()": "reference/api/pandas.datetimeindex.to_period.html", "DatetimeIndex.to_perioddelta()": "reference/api/pandas.datetimeindex.to_perioddelta.html", "DatetimeIndex.to_pydatetime()": "reference/api/pandas.datetimeindex.to_pydatetime.html", "DatetimeIndex.to_series()": "reference/api/pandas.datetimeindex.to_series.html", "DatetimeIndex.tz": "reference/api/pandas.datetimeindex.tz.html", "DatetimeIndex.tz_convert()": "reference/api/pandas.datetimeindex.tz_convert.html", "DatetimeIndex.tz_localize()": "reference/api/pandas.datetimeindex.tz_localize.html", "DatetimeIndex.week": "reference/api/pandas.datetimeindex.week.html", "DatetimeIndex.weekday": "reference/api/pandas.datetimeindex.weekday.html", "DatetimeIndex.weekofyear": "reference/api/pandas.datetimeindex.weekofyear.html", "DatetimeIndex.year": "reference/api/pandas.datetimeindex.year.html", "DatetimeIndex[source]": "reference/api/pandas.datetimeindex.html", "DatetimeTZDtype()": "reference/api/pandas.datetimetzdtype.html", "DatetimeTZDtype.tz": "reference/api/pandas.datetimetzdtype.tz.html", "DatetimeTZDtype.unit": "reference/api/pandas.datetimetzdtype.unit.html", "Day.apply()": "reference/api/pandas.tseries.offsets.day.apply.html", "Day.apply_index()": "reference/api/pandas.tseries.offsets.day.apply_index.html", "Day.base": "reference/api/pandas.tseries.offsets.day.base.html", "Day.copy()": "reference/api/pandas.tseries.offsets.day.copy.html", "Day.delta": "reference/api/pandas.tseries.offsets.day.delta.html", "Day.freqstr": "reference/api/pandas.tseries.offsets.day.freqstr.html", "Day.isAnchored()": "reference/api/pandas.tseries.offsets.day.isanchored.html", "Day.kwds": "reference/api/pandas.tseries.offsets.day.kwds.html", "Day.name": "reference/api/pandas.tseries.offsets.day.name.html", "Day.nanos": "reference/api/pandas.tseries.offsets.day.nanos.html", "Day.normalize": "reference/api/pandas.tseries.offsets.day.normalize.html", "Day.onOffset()": "reference/api/pandas.tseries.offsets.day.onoffset.html", "Day.rollback()": "reference/api/pandas.tseries.offsets.day.rollback.html", "Day.rollforward()": "reference/api/pandas.tseries.offsets.day.rollforward.html", "Day.rule_code": "reference/api/pandas.tseries.offsets.day.rule_code.html", "Easter.apply()": "reference/api/pandas.tseries.offsets.easter.apply.html", "Easter.apply_index()": "reference/api/pandas.tseries.offsets.easter.apply_index.html", "Easter.base": "reference/api/pandas.tseries.offsets.easter.base.html", "Easter.copy()": "reference/api/pandas.tseries.offsets.easter.copy.html", "Easter.freqstr": "reference/api/pandas.tseries.offsets.easter.freqstr.html", "Easter.isAnchored()": "reference/api/pandas.tseries.offsets.easter.isanchored.html", "Easter.kwds": "reference/api/pandas.tseries.offsets.easter.kwds.html", "Easter.name": "reference/api/pandas.tseries.offsets.easter.name.html", "Easter.nanos": "reference/api/pandas.tseries.offsets.easter.nanos.html", "Easter.normalize": "reference/api/pandas.tseries.offsets.easter.normalize.html", "Easter.onOffset()": "reference/api/pandas.tseries.offsets.easter.onoffset.html", "Easter.rollback()": "reference/api/pandas.tseries.offsets.easter.rollback.html", "Easter.rollforward()": "reference/api/pandas.tseries.offsets.easter.rollforward.html", "Easter.rule_code": "reference/api/pandas.tseries.offsets.easter.rule_code.html", "EWM.corr()": "reference/api/pandas.core.window.ewm.corr.html", "EWM.cov()": "reference/api/pandas.core.window.ewm.cov.html", "EWM.mean()": "reference/api/pandas.core.window.ewm.mean.html", "EWM.std()": "reference/api/pandas.core.window.ewm.std.html", "EWM.var()": "reference/api/pandas.core.window.ewm.var.html", "ExcelFile.parse()": "reference/api/pandas.excelfile.parse.html", "ExcelWriter()": "reference/api/pandas.excelwriter.html", "exception pandas.errors.DtypeWarning[source]": "reference/api/pandas.errors.dtypewarning.html", "exception pandas.errors.EmptyDataError[source]": "reference/api/pandas.errors.emptydataerror.html", "exception pandas.errors.OutOfBoundsDatetime": "reference/api/pandas.errors.outofboundsdatetime.html", "exception pandas.errors.ParserError[source]": "reference/api/pandas.errors.parsererror.html", "exception pandas.errors.ParserWarning[source]": "reference/api/pandas.errors.parserwarning.html", "exception pandas.errors.PerformanceWarning[source]": "reference/api/pandas.errors.performancewarning.html", "exception pandas.errors.UnsortedIndexError[source]": "reference/api/pandas.errors.unsortedindexerror.html", "exception pandas.errors.UnsupportedFunctionCall[source]": "reference/api/pandas.errors.unsupportedfunctioncall.html", "Expanding.aggregate()": "reference/api/pandas.core.window.expanding.aggregate.html", "Expanding.apply()": "reference/api/pandas.core.window.expanding.apply.html", "Expanding.corr()": "reference/api/pandas.core.window.expanding.corr.html", "Expanding.count()": "reference/api/pandas.core.window.expanding.count.html", "Expanding.cov()": "reference/api/pandas.core.window.expanding.cov.html", "Expanding.kurt()": "reference/api/pandas.core.window.expanding.kurt.html", "Expanding.max()": "reference/api/pandas.core.window.expanding.max.html", "Expanding.mean()": "reference/api/pandas.core.window.expanding.mean.html", "Expanding.median()": "reference/api/pandas.core.window.expanding.median.html", "Expanding.min()": "reference/api/pandas.core.window.expanding.min.html", "Expanding.quantile()": "reference/api/pandas.core.window.expanding.quantile.html", "Expanding.skew()": "reference/api/pandas.core.window.expanding.skew.html", "Expanding.std()": "reference/api/pandas.core.window.expanding.std.html", "Expanding.sum()": "reference/api/pandas.core.window.expanding.sum.html", "Expanding.var()": "reference/api/pandas.core.window.expanding.var.html", "ExtensionArray.argsort()": "reference/api/pandas.api.extensions.extensionarray.argsort.html", "ExtensionArray.astype()": "reference/api/pandas.api.extensions.extensionarray.astype.html", "ExtensionArray.copy()": "reference/api/pandas.api.extensions.extensionarray.copy.html", "ExtensionArray.dropna()": "reference/api/pandas.api.extensions.extensionarray.dropna.html", "ExtensionArray.dtype": "reference/api/pandas.api.extensions.extensionarray.dtype.html", "ExtensionArray.factorize()": "reference/api/pandas.api.extensions.extensionarray.factorize.html", "ExtensionArray.fillna()": "reference/api/pandas.api.extensions.extensionarray.fillna.html", "ExtensionArray.isna()": "reference/api/pandas.api.extensions.extensionarray.isna.html", "ExtensionArray.nbytes": "reference/api/pandas.api.extensions.extensionarray.nbytes.html", "ExtensionArray.ndim": "reference/api/pandas.api.extensions.extensionarray.ndim.html", "ExtensionArray.ravel()": "reference/api/pandas.api.extensions.extensionarray.ravel.html", "ExtensionArray.repeat()": "reference/api/pandas.api.extensions.extensionarray.repeat.html", "ExtensionArray.searchsorted()": "reference/api/pandas.api.extensions.extensionarray.searchsorted.html", "ExtensionArray.shape": "reference/api/pandas.api.extensions.extensionarray.shape.html", "ExtensionArray.shift()": "reference/api/pandas.api.extensions.extensionarray.shift.html", "ExtensionArray.take()": "reference/api/pandas.api.extensions.extensionarray.take.html", "ExtensionArray.unique()": "reference/api/pandas.api.extensions.extensionarray.unique.html", "ExtensionArray._concat_same_type()": "reference/api/pandas.api.extensions.extensionarray._concat_same_type.html", "ExtensionArray._formatter()": "reference/api/pandas.api.extensions.extensionarray._formatter.html", "ExtensionArray._formatting_values()": "reference/api/pandas.api.extensions.extensionarray._formatting_values.html", "ExtensionArray._from_factorized()": "reference/api/pandas.api.extensions.extensionarray._from_factorized.html", "ExtensionArray._from_sequence()": "reference/api/pandas.api.extensions.extensionarray._from_sequence.html", "ExtensionArray._from_sequence_of_strings()": "reference/api/pandas.api.extensions.extensionarray._from_sequence_of_strings.html", "ExtensionArray._ndarray_values": "reference/api/pandas.api.extensions.extensionarray._ndarray_values.html", "ExtensionArray._reduce()": "reference/api/pandas.api.extensions.extensionarray._reduce.html", "ExtensionArray._values_for_argsort()": "reference/api/pandas.api.extensions.extensionarray._values_for_argsort.html", "ExtensionArray._values_for_factorize()": "reference/api/pandas.api.extensions.extensionarray._values_for_factorize.html", "ExtensionDtype.construct_array_type()": "reference/api/pandas.api.extensions.extensiondtype.construct_array_type.html", "ExtensionDtype.construct_from_string()": "reference/api/pandas.api.extensions.extensiondtype.construct_from_string.html", "ExtensionDtype.is_dtype()": "reference/api/pandas.api.extensions.extensiondtype.is_dtype.html", "ExtensionDtype.kind": "reference/api/pandas.api.extensions.extensiondtype.kind.html", "ExtensionDtype.name": "reference/api/pandas.api.extensions.extensiondtype.name.html", "ExtensionDtype.names": "reference/api/pandas.api.extensions.extensiondtype.names.html", "ExtensionDtype.na_value": "reference/api/pandas.api.extensions.extensiondtype.na_value.html", "ExtensionDtype.type": "reference/api/pandas.api.extensions.extensiondtype.type.html", "Extensions": "reference/extensions.html", "Float64Index[source]": "reference/api/pandas.float64index.html", "FY5253.apply()": "reference/api/pandas.tseries.offsets.fy5253.apply.html", "FY5253.apply_index()": "reference/api/pandas.tseries.offsets.fy5253.apply_index.html", "FY5253.base": "reference/api/pandas.tseries.offsets.fy5253.base.html", "FY5253.copy()": "reference/api/pandas.tseries.offsets.fy5253.copy.html", "FY5253.freqstr": "reference/api/pandas.tseries.offsets.fy5253.freqstr.html", "FY5253.get_rule_code_suffix()": "reference/api/pandas.tseries.offsets.fy5253.get_rule_code_suffix.html", "FY5253.get_year_end()": "reference/api/pandas.tseries.offsets.fy5253.get_year_end.html", "FY5253.isAnchored()": "reference/api/pandas.tseries.offsets.fy5253.isanchored.html", "FY5253.kwds": "reference/api/pandas.tseries.offsets.fy5253.kwds.html", "FY5253.name": "reference/api/pandas.tseries.offsets.fy5253.name.html", "FY5253.nanos": "reference/api/pandas.tseries.offsets.fy5253.nanos.html", "FY5253.normalize": "reference/api/pandas.tseries.offsets.fy5253.normalize.html", "FY5253.onOffset()": "reference/api/pandas.tseries.offsets.fy5253.onoffset.html", "FY5253.rollback()": "reference/api/pandas.tseries.offsets.fy5253.rollback.html", "FY5253.rollforward()": "reference/api/pandas.tseries.offsets.fy5253.rollforward.html", "FY5253.rule_code": "reference/api/pandas.tseries.offsets.fy5253.rule_code.html", "FY5253Quarter.apply()": "reference/api/pandas.tseries.offsets.fy5253quarter.apply.html", "FY5253Quarter.apply_index()": "reference/api/pandas.tseries.offsets.fy5253quarter.apply_index.html", "FY5253Quarter.base": "reference/api/pandas.tseries.offsets.fy5253quarter.base.html", "FY5253Quarter.copy()": "reference/api/pandas.tseries.offsets.fy5253quarter.copy.html", "FY5253Quarter.freqstr": "reference/api/pandas.tseries.offsets.fy5253quarter.freqstr.html", "FY5253Quarter.get_weeks()": "reference/api/pandas.tseries.offsets.fy5253quarter.get_weeks.html", "FY5253Quarter.isAnchored()": "reference/api/pandas.tseries.offsets.fy5253quarter.isanchored.html", "FY5253Quarter.kwds": "reference/api/pandas.tseries.offsets.fy5253quarter.kwds.html", "FY5253Quarter.name": "reference/api/pandas.tseries.offsets.fy5253quarter.name.html", "FY5253Quarter.nanos": "reference/api/pandas.tseries.offsets.fy5253quarter.nanos.html", "FY5253Quarter.normalize": "reference/api/pandas.tseries.offsets.fy5253quarter.normalize.html", "FY5253Quarter.onOffset()": "reference/api/pandas.tseries.offsets.fy5253quarter.onoffset.html", "FY5253Quarter.rollback()": "reference/api/pandas.tseries.offsets.fy5253quarter.rollback.html", "FY5253Quarter.rollforward()": "reference/api/pandas.tseries.offsets.fy5253quarter.rollforward.html", "FY5253Quarter.rule_code": "reference/api/pandas.tseries.offsets.fy5253quarter.rule_code.html", "FY5253Quarter.year_has_extra_week()": "reference/api/pandas.tseries.offsets.fy5253quarter.year_has_extra_week.html", "General functions": "reference/general_functions.html", "General utility functions": "reference/general_utility_functions.html", "GroupBy": "reference/groupby.html", "GroupBy.agg()": "reference/api/pandas.core.groupby.groupby.agg.html", "GroupBy.aggregate()": "reference/api/pandas.core.groupby.groupby.aggregate.html", "GroupBy.all()": "reference/api/pandas.core.groupby.groupby.all.html", "GroupBy.any()": "reference/api/pandas.core.groupby.groupby.any.html", "GroupBy.apply()": "reference/api/pandas.core.groupby.groupby.apply.html", "GroupBy.bfill()": "reference/api/pandas.core.groupby.groupby.bfill.html", "GroupBy.count()": "reference/api/pandas.core.groupby.groupby.count.html", "GroupBy.cumcount()": "reference/api/pandas.core.groupby.groupby.cumcount.html", "GroupBy.cummax()": "reference/api/pandas.core.groupby.groupby.cummax.html", "GroupBy.cummin()": "reference/api/pandas.core.groupby.groupby.cummin.html", "GroupBy.cumprod()": "reference/api/pandas.core.groupby.groupby.cumprod.html", "GroupBy.cumsum()": "reference/api/pandas.core.groupby.groupby.cumsum.html", "GroupBy.ffill()": "reference/api/pandas.core.groupby.groupby.ffill.html", "GroupBy.first()": "reference/api/pandas.core.groupby.groupby.first.html", "GroupBy.get_group()": "reference/api/pandas.core.groupby.groupby.get_group.html", "GroupBy.groups": "reference/api/pandas.core.groupby.groupby.groups.html", "GroupBy.head()": "reference/api/pandas.core.groupby.groupby.head.html", "GroupBy.indices": "reference/api/pandas.core.groupby.groupby.indices.html", "GroupBy.last()": "reference/api/pandas.core.groupby.groupby.last.html", "GroupBy.max()": "reference/api/pandas.core.groupby.groupby.max.html", "GroupBy.mean()": "reference/api/pandas.core.groupby.groupby.mean.html", "GroupBy.median()": "reference/api/pandas.core.groupby.groupby.median.html", "GroupBy.min()": "reference/api/pandas.core.groupby.groupby.min.html", "GroupBy.ngroup()": "reference/api/pandas.core.groupby.groupby.ngroup.html", "GroupBy.nth()": "reference/api/pandas.core.groupby.groupby.nth.html", "GroupBy.ohlc()": "reference/api/pandas.core.groupby.groupby.ohlc.html", "GroupBy.pct_change()": "reference/api/pandas.core.groupby.groupby.pct_change.html", "GroupBy.pipe()": "reference/api/pandas.core.groupby.groupby.pipe.html", "GroupBy.prod()": "reference/api/pandas.core.groupby.groupby.prod.html", "GroupBy.rank()": "reference/api/pandas.core.groupby.groupby.rank.html", "GroupBy.sem()": "reference/api/pandas.core.groupby.groupby.sem.html", "GroupBy.size()": "reference/api/pandas.core.groupby.groupby.size.html", "GroupBy.std()": "reference/api/pandas.core.groupby.groupby.std.html", "GroupBy.sum()": "reference/api/pandas.core.groupby.groupby.sum.html", "GroupBy.tail()": "reference/api/pandas.core.groupby.groupby.tail.html", "GroupBy.transform()": "reference/api/pandas.core.groupby.groupby.transform.html", "GroupBy.var()": "reference/api/pandas.core.groupby.groupby.var.html", "GroupBy.__iter__()": "reference/api/pandas.core.groupby.groupby.__iter__.html", "Grouper()": "reference/api/pandas.grouper.html", "HDFStore.append()": "reference/api/pandas.hdfstore.append.html", "HDFStore.get()": "reference/api/pandas.hdfstore.get.html", "HDFStore.groups()": "reference/api/pandas.hdfstore.groups.html", "HDFStore.info()": "reference/api/pandas.hdfstore.info.html", "HDFStore.keys()": "reference/api/pandas.hdfstore.keys.html", "HDFStore.put()": "reference/api/pandas.hdfstore.put.html", "HDFStore.select()": "reference/api/pandas.hdfstore.select.html", "HDFStore.walk()": "reference/api/pandas.hdfstore.walk.html", "Hour.apply()": "reference/api/pandas.tseries.offsets.hour.apply.html", "Hour.apply_index()": "reference/api/pandas.tseries.offsets.hour.apply_index.html", "Hour.base": "reference/api/pandas.tseries.offsets.hour.base.html", "Hour.copy()": "reference/api/pandas.tseries.offsets.hour.copy.html", "Hour.delta": "reference/api/pandas.tseries.offsets.hour.delta.html", "Hour.freqstr": "reference/api/pandas.tseries.offsets.hour.freqstr.html", "Hour.isAnchored()": "reference/api/pandas.tseries.offsets.hour.isanchored.html", "Hour.kwds": "reference/api/pandas.tseries.offsets.hour.kwds.html", "Hour.name": "reference/api/pandas.tseries.offsets.hour.name.html", "Hour.nanos": "reference/api/pandas.tseries.offsets.hour.nanos.html", "Hour.normalize": "reference/api/pandas.tseries.offsets.hour.normalize.html", "Hour.onOffset()": "reference/api/pandas.tseries.offsets.hour.onoffset.html", "Hour.rollback()": "reference/api/pandas.tseries.offsets.hour.rollback.html", "Hour.rollforward()": "reference/api/pandas.tseries.offsets.hour.rollforward.html", "Hour.rule_code": "reference/api/pandas.tseries.offsets.hour.rule_code.html", "Index.all()": "reference/api/pandas.index.all.html", "Index.any()": "reference/api/pandas.index.any.html", "Index.append()": "reference/api/pandas.index.append.html", "Index.argmax()": "reference/api/pandas.index.argmax.html", "Index.argmin()": "reference/api/pandas.index.argmin.html", "Index.argsort()": "reference/api/pandas.index.argsort.html", "Index.array": "reference/api/pandas.index.array.html", "Index.asi8": "reference/api/pandas.index.asi8.html", "Index.asof()": "reference/api/pandas.index.asof.html", "Index.asof_locs()": "reference/api/pandas.index.asof_locs.html", "Index.astype()": "reference/api/pandas.index.astype.html", "Index.base": "reference/api/pandas.index.base.html", "Index.contains()": "reference/api/pandas.index.contains.html", "Index.copy()": "reference/api/pandas.index.copy.html", "Index.data": "reference/api/pandas.index.data.html", "Index.delete()": "reference/api/pandas.index.delete.html", "Index.difference()": "reference/api/pandas.index.difference.html", "Index.drop()": "reference/api/pandas.index.drop.html", "Index.droplevel()": "reference/api/pandas.index.droplevel.html", "Index.dropna()": "reference/api/pandas.index.dropna.html", "Index.drop_duplicates()": "reference/api/pandas.index.drop_duplicates.html", "Index.dtype": "reference/api/pandas.index.dtype.html", "Index.dtype_str": "reference/api/pandas.index.dtype_str.html", "Index.duplicated()": "reference/api/pandas.index.duplicated.html", "Index.empty": "reference/api/pandas.index.empty.html", "Index.equals()": "reference/api/pandas.index.equals.html", "Index.factorize()": "reference/api/pandas.index.factorize.html", "Index.fillna()": "reference/api/pandas.index.fillna.html", "Index.flags": "reference/api/pandas.index.flags.html", "Index.format()": "reference/api/pandas.index.format.html", "Index.get_duplicates()": "reference/api/pandas.index.get_duplicates.html", "Index.get_indexer()": "reference/api/pandas.index.get_indexer.html", "Index.get_indexer_for()": "reference/api/pandas.index.get_indexer_for.html", "Index.get_indexer_non_unique()": "reference/api/pandas.index.get_indexer_non_unique.html", "Index.get_level_values()": "reference/api/pandas.index.get_level_values.html", "Index.get_loc()": "reference/api/pandas.index.get_loc.html", "Index.get_slice_bound()": "reference/api/pandas.index.get_slice_bound.html", "Index.get_value()": "reference/api/pandas.index.get_value.html", "Index.get_values()": "reference/api/pandas.index.get_values.html", "Index.groupby()": "reference/api/pandas.index.groupby.html", "Index.hasnans": "reference/api/pandas.index.hasnans.html", "Index.has_duplicates": "reference/api/pandas.index.has_duplicates.html", "Index.holds_integer()": "reference/api/pandas.index.holds_integer.html", "Index.identical()": "reference/api/pandas.index.identical.html", "Index.inferred_type": "reference/api/pandas.index.inferred_type.html", "Index.insert()": "reference/api/pandas.index.insert.html", "Index.intersection()": "reference/api/pandas.index.intersection.html", "Index.isin()": "reference/api/pandas.index.isin.html", "Index.isna()": "reference/api/pandas.index.isna.html", "Index.isnull()": "reference/api/pandas.index.isnull.html", "Index.is_()": "reference/api/pandas.index.is_.html", "Index.is_all_dates": "reference/api/pandas.index.is_all_dates.html", "Index.is_boolean()": "reference/api/pandas.index.is_boolean.html", "Index.is_categorical()": "reference/api/pandas.index.is_categorical.html", "Index.is_floating()": "reference/api/pandas.index.is_floating.html", "Index.is_integer()": "reference/api/pandas.index.is_integer.html", "Index.is_interval()": "reference/api/pandas.index.is_interval.html", "Index.is_lexsorted_for_tuple()": "reference/api/pandas.index.is_lexsorted_for_tuple.html", "Index.is_mixed()": "reference/api/pandas.index.is_mixed.html", "Index.is_monotonic": "reference/api/pandas.index.is_monotonic.html", "Index.is_monotonic_decreasing": "reference/api/pandas.index.is_monotonic_decreasing.html", "Index.is_monotonic_increasing": "reference/api/pandas.index.is_monotonic_increasing.html", "Index.is_numeric()": "reference/api/pandas.index.is_numeric.html", "Index.is_object()": "reference/api/pandas.index.is_object.html", "Index.is_type_compatible()": "reference/api/pandas.index.is_type_compatible.html", "Index.is_unique": "reference/api/pandas.index.is_unique.html", "Index.item()": "reference/api/pandas.index.item.html", "Index.itemsize": "reference/api/pandas.index.itemsize.html", "Index.join()": "reference/api/pandas.index.join.html", "Index.map()": "reference/api/pandas.index.map.html", "Index.max()": "reference/api/pandas.index.max.html", "Index.memory_usage()": "reference/api/pandas.index.memory_usage.html", "Index.min()": "reference/api/pandas.index.min.html", "Index.name": "reference/api/pandas.index.name.html", "Index.names": "reference/api/pandas.index.names.html", "Index.nbytes": "reference/api/pandas.index.nbytes.html", "Index.ndim": "reference/api/pandas.index.ndim.html", "Index.nlevels": "reference/api/pandas.index.nlevels.html", "Index.notna()": "reference/api/pandas.index.notna.html", "Index.notnull()": "reference/api/pandas.index.notnull.html", "Index.nunique()": "reference/api/pandas.index.nunique.html", "Index.putmask()": "reference/api/pandas.index.putmask.html", "Index.ravel()": "reference/api/pandas.index.ravel.html", "Index.reindex()": "reference/api/pandas.index.reindex.html", "Index.rename()": "reference/api/pandas.index.rename.html", "Index.repeat()": "reference/api/pandas.index.repeat.html", "Index.searchsorted()": "reference/api/pandas.index.searchsorted.html", "Index.set_names()": "reference/api/pandas.index.set_names.html", "Index.set_value()": "reference/api/pandas.index.set_value.html", "Index.shape": "reference/api/pandas.index.shape.html", "Index.shift()": "reference/api/pandas.index.shift.html", "Index.size": "reference/api/pandas.index.size.html", "Index.slice_indexer()": "reference/api/pandas.index.slice_indexer.html", "Index.slice_locs()": "reference/api/pandas.index.slice_locs.html", "Index.sort()": "reference/api/pandas.index.sort.html", "Index.sortlevel()": "reference/api/pandas.index.sortlevel.html", "Index.sort_values()": "reference/api/pandas.index.sort_values.html", "Index.str()": "reference/api/pandas.index.str.html", "Index.strides": "reference/api/pandas.index.strides.html", "Index.summary()": "reference/api/pandas.index.summary.html", "Index.symmetric_difference()": "reference/api/pandas.index.symmetric_difference.html", "Index.T": "reference/api/pandas.index.t.html", "Index.take()": "reference/api/pandas.index.take.html", "Index.tolist()": "reference/api/pandas.index.tolist.html", "Index.to_flat_index()": "reference/api/pandas.index.to_flat_index.html", "Index.to_frame()": "reference/api/pandas.index.to_frame.html", "Index.to_list()": "reference/api/pandas.index.to_list.html", "Index.to_native_types()": "reference/api/pandas.index.to_native_types.html", "Index.to_numpy()": "reference/api/pandas.index.to_numpy.html", "Index.to_series()": "reference/api/pandas.index.to_series.html", "Index.transpose()": "reference/api/pandas.index.transpose.html", "Index.union()": "reference/api/pandas.index.union.html", "Index.unique()": "reference/api/pandas.index.unique.html", "Index.values": "reference/api/pandas.index.values.html", "Index.value_counts()": "reference/api/pandas.index.value_counts.html", "Index.view()": "reference/api/pandas.index.view.html", "Index.where()": "reference/api/pandas.index.where.html", "Index[source]": "reference/api/pandas.index.html", "Input/output": "reference/io.html", "Int16Dtype[source]": "reference/api/pandas.int16dtype.html", "Int32Dtype[source]": "reference/api/pandas.int32dtype.html", "Int64Dtype[source]": "reference/api/pandas.int64dtype.html", "Int64Index[source]": "reference/api/pandas.int64index.html", "Int8Dtype[source]": "reference/api/pandas.int8dtype.html", "Interval": "reference/api/pandas.interval.html", "Interval.closed": "reference/api/pandas.interval.closed.html", "Interval.closed_left": "reference/api/pandas.interval.closed_left.html", "Interval.closed_right": "reference/api/pandas.interval.closed_right.html", "Interval.is_empty": "reference/api/pandas.interval.is_empty.html", "Interval.left": "reference/api/pandas.interval.left.html", "Interval.length": "reference/api/pandas.interval.length.html", "Interval.mid": "reference/api/pandas.interval.mid.html", "Interval.open_left": "reference/api/pandas.interval.open_left.html", "Interval.open_right": "reference/api/pandas.interval.open_right.html", "Interval.overlaps()": "reference/api/pandas.interval.overlaps.html", "Interval.right": "reference/api/pandas.interval.right.html", "IntervalArray.closed": "reference/api/pandas.arrays.intervalarray.closed.html", "IntervalArray.contains()": "reference/api/pandas.arrays.intervalarray.contains.html", "IntervalArray.from_arrays()": "reference/api/pandas.arrays.intervalarray.from_arrays.html", "IntervalArray.from_breaks()": "reference/api/pandas.arrays.intervalarray.from_breaks.html", "IntervalArray.from_tuples()": "reference/api/pandas.arrays.intervalarray.from_tuples.html", "IntervalArray.is_empty": "reference/api/pandas.arrays.intervalarray.is_empty.html", "IntervalArray.is_non_overlapping_monotonic": "reference/api/pandas.arrays.intervalarray.is_non_overlapping_monotonic.html", "IntervalArray.left": "reference/api/pandas.arrays.intervalarray.left.html", "IntervalArray.length": "reference/api/pandas.arrays.intervalarray.length.html", "IntervalArray.mid": "reference/api/pandas.arrays.intervalarray.mid.html", "IntervalArray.overlaps()": "reference/api/pandas.arrays.intervalarray.overlaps.html", "IntervalArray.right": "reference/api/pandas.arrays.intervalarray.right.html", "IntervalArray.set_closed()": "reference/api/pandas.arrays.intervalarray.set_closed.html", "IntervalArray.to_tuples()": "reference/api/pandas.arrays.intervalarray.to_tuples.html", "IntervalDtype.subtype": "reference/api/pandas.intervaldtype.subtype.html", "IntervalDtype[source]": "reference/api/pandas.intervaldtype.html", "IntervalIndex.closed": "reference/api/pandas.intervalindex.closed.html", "IntervalIndex.contains()": "reference/api/pandas.intervalindex.contains.html", "IntervalIndex.from_arrays()": "reference/api/pandas.intervalindex.from_arrays.html", "IntervalIndex.from_breaks()": "reference/api/pandas.intervalindex.from_breaks.html", "IntervalIndex.from_tuples()": "reference/api/pandas.intervalindex.from_tuples.html", "IntervalIndex.get_indexer()": "reference/api/pandas.intervalindex.get_indexer.html", "IntervalIndex.get_loc()": "reference/api/pandas.intervalindex.get_loc.html", "IntervalIndex.is_empty": "reference/api/pandas.intervalindex.is_empty.html", "IntervalIndex.is_non_overlapping_monotonic": "reference/api/pandas.intervalindex.is_non_overlapping_monotonic.html", "IntervalIndex.is_overlapping": "reference/api/pandas.intervalindex.is_overlapping.html", "IntervalIndex.left": "reference/api/pandas.intervalindex.left.html", "IntervalIndex.length": "reference/api/pandas.intervalindex.length.html", "IntervalIndex.mid": "reference/api/pandas.intervalindex.mid.html", "IntervalIndex.overlaps()": "reference/api/pandas.intervalindex.overlaps.html", "IntervalIndex.right": "reference/api/pandas.intervalindex.right.html", "IntervalIndex.set_closed()": "reference/api/pandas.intervalindex.set_closed.html", "IntervalIndex.to_tuples()": "reference/api/pandas.intervalindex.to_tuples.html", "IntervalIndex.values": "reference/api/pandas.intervalindex.values.html", "IntervalIndex[source]": "reference/api/pandas.intervalindex.html", "io.formats.style.Styler()": "reference/api/pandas.io.formats.style.styler.html", "LastWeekOfMonth.apply()": "reference/api/pandas.tseries.offsets.lastweekofmonth.apply.html", "LastWeekOfMonth.apply_index()": "reference/api/pandas.tseries.offsets.lastweekofmonth.apply_index.html", "LastWeekOfMonth.base": "reference/api/pandas.tseries.offsets.lastweekofmonth.base.html", "LastWeekOfMonth.copy()": "reference/api/pandas.tseries.offsets.lastweekofmonth.copy.html", "LastWeekOfMonth.freqstr": "reference/api/pandas.tseries.offsets.lastweekofmonth.freqstr.html", "LastWeekOfMonth.isAnchored()": "reference/api/pandas.tseries.offsets.lastweekofmonth.isanchored.html", "LastWeekOfMonth.kwds": "reference/api/pandas.tseries.offsets.lastweekofmonth.kwds.html", "LastWeekOfMonth.name": "reference/api/pandas.tseries.offsets.lastweekofmonth.name.html", "LastWeekOfMonth.nanos": "reference/api/pandas.tseries.offsets.lastweekofmonth.nanos.html", "LastWeekOfMonth.normalize": "reference/api/pandas.tseries.offsets.lastweekofmonth.normalize.html", "LastWeekOfMonth.onOffset()": "reference/api/pandas.tseries.offsets.lastweekofmonth.onoffset.html", "LastWeekOfMonth.rollback()": "reference/api/pandas.tseries.offsets.lastweekofmonth.rollback.html", "LastWeekOfMonth.rollforward()": "reference/api/pandas.tseries.offsets.lastweekofmonth.rollforward.html", "LastWeekOfMonth.rule_code": "reference/api/pandas.tseries.offsets.lastweekofmonth.rule_code.html", "Micro.apply()": "reference/api/pandas.tseries.offsets.micro.apply.html", "Micro.apply_index()": "reference/api/pandas.tseries.offsets.micro.apply_index.html", "Micro.base": "reference/api/pandas.tseries.offsets.micro.base.html", "Micro.copy()": "reference/api/pandas.tseries.offsets.micro.copy.html", "Micro.delta": "reference/api/pandas.tseries.offsets.micro.delta.html", "Micro.freqstr": "reference/api/pandas.tseries.offsets.micro.freqstr.html", "Micro.isAnchored()": "reference/api/pandas.tseries.offsets.micro.isanchored.html", "Micro.kwds": "reference/api/pandas.tseries.offsets.micro.kwds.html", "Micro.name": "reference/api/pandas.tseries.offsets.micro.name.html", "Micro.nanos": "reference/api/pandas.tseries.offsets.micro.nanos.html", "Micro.normalize": "reference/api/pandas.tseries.offsets.micro.normalize.html", "Micro.onOffset()": "reference/api/pandas.tseries.offsets.micro.onoffset.html", "Micro.rollback()": "reference/api/pandas.tseries.offsets.micro.rollback.html", "Micro.rollforward()": "reference/api/pandas.tseries.offsets.micro.rollforward.html", "Micro.rule_code": "reference/api/pandas.tseries.offsets.micro.rule_code.html", "Milli.apply()": "reference/api/pandas.tseries.offsets.milli.apply.html", "Milli.apply_index()": "reference/api/pandas.tseries.offsets.milli.apply_index.html", "Milli.base": "reference/api/pandas.tseries.offsets.milli.base.html", "Milli.copy()": "reference/api/pandas.tseries.offsets.milli.copy.html", "Milli.delta": "reference/api/pandas.tseries.offsets.milli.delta.html", "Milli.freqstr": "reference/api/pandas.tseries.offsets.milli.freqstr.html", "Milli.isAnchored()": "reference/api/pandas.tseries.offsets.milli.isanchored.html", "Milli.kwds": "reference/api/pandas.tseries.offsets.milli.kwds.html", "Milli.name": "reference/api/pandas.tseries.offsets.milli.name.html", "Milli.nanos": "reference/api/pandas.tseries.offsets.milli.nanos.html", "Milli.normalize": "reference/api/pandas.tseries.offsets.milli.normalize.html", "Milli.onOffset()": "reference/api/pandas.tseries.offsets.milli.onoffset.html", "Milli.rollback()": "reference/api/pandas.tseries.offsets.milli.rollback.html", "Milli.rollforward()": "reference/api/pandas.tseries.offsets.milli.rollforward.html", "Milli.rule_code": "reference/api/pandas.tseries.offsets.milli.rule_code.html", "Minute.apply()": "reference/api/pandas.tseries.offsets.minute.apply.html", "Minute.apply_index()": "reference/api/pandas.tseries.offsets.minute.apply_index.html", "Minute.base": "reference/api/pandas.tseries.offsets.minute.base.html", "Minute.copy()": "reference/api/pandas.tseries.offsets.minute.copy.html", "Minute.delta": "reference/api/pandas.tseries.offsets.minute.delta.html", "Minute.freqstr": "reference/api/pandas.tseries.offsets.minute.freqstr.html", "Minute.isAnchored()": "reference/api/pandas.tseries.offsets.minute.isanchored.html", "Minute.kwds": "reference/api/pandas.tseries.offsets.minute.kwds.html", "Minute.name": "reference/api/pandas.tseries.offsets.minute.name.html", "Minute.nanos": "reference/api/pandas.tseries.offsets.minute.nanos.html", "Minute.normalize": "reference/api/pandas.tseries.offsets.minute.normalize.html", "Minute.onOffset()": "reference/api/pandas.tseries.offsets.minute.onoffset.html", "Minute.rollback()": "reference/api/pandas.tseries.offsets.minute.rollback.html", "Minute.rollforward()": "reference/api/pandas.tseries.offsets.minute.rollforward.html", "Minute.rule_code": "reference/api/pandas.tseries.offsets.minute.rule_code.html", "MonthBegin.apply()": "reference/api/pandas.tseries.offsets.monthbegin.apply.html", "MonthBegin.apply_index()": "reference/api/pandas.tseries.offsets.monthbegin.apply_index.html", "MonthBegin.base": "reference/api/pandas.tseries.offsets.monthbegin.base.html", "MonthBegin.copy()": "reference/api/pandas.tseries.offsets.monthbegin.copy.html", "MonthBegin.freqstr": "reference/api/pandas.tseries.offsets.monthbegin.freqstr.html", "MonthBegin.isAnchored()": "reference/api/pandas.tseries.offsets.monthbegin.isanchored.html", "MonthBegin.kwds": "reference/api/pandas.tseries.offsets.monthbegin.kwds.html", "MonthBegin.name": "reference/api/pandas.tseries.offsets.monthbegin.name.html", "MonthBegin.nanos": "reference/api/pandas.tseries.offsets.monthbegin.nanos.html", "MonthBegin.normalize": "reference/api/pandas.tseries.offsets.monthbegin.normalize.html", "MonthBegin.onOffset()": "reference/api/pandas.tseries.offsets.monthbegin.onoffset.html", "MonthBegin.rollback()": "reference/api/pandas.tseries.offsets.monthbegin.rollback.html", "MonthBegin.rollforward()": "reference/api/pandas.tseries.offsets.monthbegin.rollforward.html", "MonthBegin.rule_code": "reference/api/pandas.tseries.offsets.monthbegin.rule_code.html", "MonthEnd.apply()": "reference/api/pandas.tseries.offsets.monthend.apply.html", "MonthEnd.apply_index()": "reference/api/pandas.tseries.offsets.monthend.apply_index.html", "MonthEnd.base": "reference/api/pandas.tseries.offsets.monthend.base.html", "MonthEnd.copy()": "reference/api/pandas.tseries.offsets.monthend.copy.html", "MonthEnd.freqstr": "reference/api/pandas.tseries.offsets.monthend.freqstr.html", "MonthEnd.isAnchored()": "reference/api/pandas.tseries.offsets.monthend.isanchored.html", "MonthEnd.kwds": "reference/api/pandas.tseries.offsets.monthend.kwds.html", "MonthEnd.name": "reference/api/pandas.tseries.offsets.monthend.name.html", "MonthEnd.nanos": "reference/api/pandas.tseries.offsets.monthend.nanos.html", "MonthEnd.normalize": "reference/api/pandas.tseries.offsets.monthend.normalize.html", "MonthEnd.onOffset()": "reference/api/pandas.tseries.offsets.monthend.onoffset.html", "MonthEnd.rollback()": "reference/api/pandas.tseries.offsets.monthend.rollback.html", "MonthEnd.rollforward()": "reference/api/pandas.tseries.offsets.monthend.rollforward.html", "MonthEnd.rule_code": "reference/api/pandas.tseries.offsets.monthend.rule_code.html", "MonthOffset.apply()": "reference/api/pandas.tseries.offsets.monthoffset.apply.html", "MonthOffset.apply_index()": "reference/api/pandas.tseries.offsets.monthoffset.apply_index.html", "MonthOffset.base": "reference/api/pandas.tseries.offsets.monthoffset.base.html", "MonthOffset.copy()": "reference/api/pandas.tseries.offsets.monthoffset.copy.html", "MonthOffset.freqstr": "reference/api/pandas.tseries.offsets.monthoffset.freqstr.html", "MonthOffset.isAnchored()": "reference/api/pandas.tseries.offsets.monthoffset.isanchored.html", "MonthOffset.kwds": "reference/api/pandas.tseries.offsets.monthoffset.kwds.html", "MonthOffset.name": "reference/api/pandas.tseries.offsets.monthoffset.name.html", "MonthOffset.nanos": "reference/api/pandas.tseries.offsets.monthoffset.nanos.html", "MonthOffset.normalize": "reference/api/pandas.tseries.offsets.monthoffset.normalize.html", "MonthOffset.onOffset()": "reference/api/pandas.tseries.offsets.monthoffset.onoffset.html", "MonthOffset.rollback()": "reference/api/pandas.tseries.offsets.monthoffset.rollback.html", "MonthOffset.rollforward()": "reference/api/pandas.tseries.offsets.monthoffset.rollforward.html", "MonthOffset.rule_code": "reference/api/pandas.tseries.offsets.monthoffset.rule_code.html", "MultiIndex.codes": "reference/api/pandas.multiindex.codes.html", "MultiIndex.droplevel()": "reference/api/pandas.multiindex.droplevel.html", "MultiIndex.from_arrays()": "reference/api/pandas.multiindex.from_arrays.html", "MultiIndex.from_frame()": "reference/api/pandas.multiindex.from_frame.html", "MultiIndex.from_product()": "reference/api/pandas.multiindex.from_product.html", "MultiIndex.from_tuples()": "reference/api/pandas.multiindex.from_tuples.html", "MultiIndex.get_indexer()": "reference/api/pandas.multiindex.get_indexer.html", "MultiIndex.get_level_values()": "reference/api/pandas.multiindex.get_level_values.html", "MultiIndex.get_loc()": "reference/api/pandas.multiindex.get_loc.html", "MultiIndex.get_loc_level()": "reference/api/pandas.multiindex.get_loc_level.html", "MultiIndex.is_lexsorted()": "reference/api/pandas.multiindex.is_lexsorted.html", "MultiIndex.levels": "reference/api/pandas.multiindex.levels.html", "MultiIndex.levshape": "reference/api/pandas.multiindex.levshape.html", "MultiIndex.names": "reference/api/pandas.multiindex.names.html", "MultiIndex.nlevels": "reference/api/pandas.multiindex.nlevels.html", "MultiIndex.remove_unused_levels()": "reference/api/pandas.multiindex.remove_unused_levels.html", "MultiIndex.reorder_levels()": "reference/api/pandas.multiindex.reorder_levels.html", "MultiIndex.set_codes()": "reference/api/pandas.multiindex.set_codes.html", "MultiIndex.set_levels()": "reference/api/pandas.multiindex.set_levels.html", "MultiIndex.sortlevel()": "reference/api/pandas.multiindex.sortlevel.html", "MultiIndex.swaplevel()": "reference/api/pandas.multiindex.swaplevel.html", "MultiIndex.to_flat_index()": "reference/api/pandas.multiindex.to_flat_index.html", "MultiIndex.to_frame()": "reference/api/pandas.multiindex.to_frame.html", "MultiIndex.to_hierarchical()": "reference/api/pandas.multiindex.to_hierarchical.html", "MultiIndex[source]": "reference/api/pandas.multiindex.html", "Nano.apply()": "reference/api/pandas.tseries.offsets.nano.apply.html", "Nano.apply_index()": "reference/api/pandas.tseries.offsets.nano.apply_index.html", "Nano.base": "reference/api/pandas.tseries.offsets.nano.base.html", "Nano.copy()": "reference/api/pandas.tseries.offsets.nano.copy.html", "Nano.delta": "reference/api/pandas.tseries.offsets.nano.delta.html", "Nano.freqstr": "reference/api/pandas.tseries.offsets.nano.freqstr.html", "Nano.isAnchored()": "reference/api/pandas.tseries.offsets.nano.isanchored.html", "Nano.kwds": "reference/api/pandas.tseries.offsets.nano.kwds.html", "Nano.name": "reference/api/pandas.tseries.offsets.nano.name.html", "Nano.nanos": "reference/api/pandas.tseries.offsets.nano.nanos.html", "Nano.normalize": "reference/api/pandas.tseries.offsets.nano.normalize.html", "Nano.onOffset()": "reference/api/pandas.tseries.offsets.nano.onoffset.html", "Nano.rollback()": "reference/api/pandas.tseries.offsets.nano.rollback.html", "Nano.rollforward()": "reference/api/pandas.tseries.offsets.nano.rollforward.html", "Nano.rule_code": "reference/api/pandas.tseries.offsets.nano.rule_code.html", "option_context()": "reference/api/pandas.option_context.html", "Pandas arrays": "reference/arrays.html", "pandas.api.extensions.register_dataframe_accessor()": "reference/api/pandas.api.extensions.register_dataframe_accessor.html", "pandas.api.extensions.register_extension_dtype()": "reference/api/pandas.api.extensions.register_extension_dtype.html", "pandas.api.extensions.register_index_accessor()": "reference/api/pandas.api.extensions.register_index_accessor.html", "pandas.api.extensions.register_series_accessor()": "reference/api/pandas.api.extensions.register_series_accessor.html", "pandas.api.types.infer_dtype()": "reference/api/pandas.api.types.infer_dtype.html", "pandas.api.types.is_bool()": "reference/api/pandas.api.types.is_bool.html", "pandas.api.types.is_bool_dtype()": "reference/api/pandas.api.types.is_bool_dtype.html", "pandas.api.types.is_categorical()": "reference/api/pandas.api.types.is_categorical.html", "pandas.api.types.is_categorical_dtype()": "reference/api/pandas.api.types.is_categorical_dtype.html", "pandas.api.types.is_complex()": "reference/api/pandas.api.types.is_complex.html", "pandas.api.types.is_complex_dtype()": "reference/api/pandas.api.types.is_complex_dtype.html", "pandas.api.types.is_datetime64tz_dtype()": "reference/api/pandas.api.types.is_datetime64tz_dtype.html", "pandas.api.types.is_datetime64_any_dtype()": "reference/api/pandas.api.types.is_datetime64_any_dtype.html", "pandas.api.types.is_datetime64_dtype()": "reference/api/pandas.api.types.is_datetime64_dtype.html", "pandas.api.types.is_datetime64_ns_dtype()": "reference/api/pandas.api.types.is_datetime64_ns_dtype.html", "pandas.api.types.is_datetimetz()": "reference/api/pandas.api.types.is_datetimetz.html", "pandas.api.types.is_dict_like()": "reference/api/pandas.api.types.is_dict_like.html", "pandas.api.types.is_extension_array_dtype()": "reference/api/pandas.api.types.is_extension_array_dtype.html", "pandas.api.types.is_extension_type()": "reference/api/pandas.api.types.is_extension_type.html", "pandas.api.types.is_file_like()": "reference/api/pandas.api.types.is_file_like.html", "pandas.api.types.is_float()": "reference/api/pandas.api.types.is_float.html", "pandas.api.types.is_float_dtype()": "reference/api/pandas.api.types.is_float_dtype.html", "pandas.api.types.is_hashable()": "reference/api/pandas.api.types.is_hashable.html", "pandas.api.types.is_int64_dtype()": "reference/api/pandas.api.types.is_int64_dtype.html", "pandas.api.types.is_integer()": "reference/api/pandas.api.types.is_integer.html", "pandas.api.types.is_integer_dtype()": "reference/api/pandas.api.types.is_integer_dtype.html", "pandas.api.types.is_interval()": "reference/api/pandas.api.types.is_interval.html", "pandas.api.types.is_interval_dtype()": "reference/api/pandas.api.types.is_interval_dtype.html", "pandas.api.types.is_iterator()": "reference/api/pandas.api.types.is_iterator.html", "pandas.api.types.is_list_like()": "reference/api/pandas.api.types.is_list_like.html", "pandas.api.types.is_named_tuple()": "reference/api/pandas.api.types.is_named_tuple.html", "pandas.api.types.is_number()": "reference/api/pandas.api.types.is_number.html", "pandas.api.types.is_numeric_dtype()": "reference/api/pandas.api.types.is_numeric_dtype.html", "pandas.api.types.is_object_dtype()": "reference/api/pandas.api.types.is_object_dtype.html", "pandas.api.types.is_period()": "reference/api/pandas.api.types.is_period.html", "pandas.api.types.is_period_dtype()": "reference/api/pandas.api.types.is_period_dtype.html", "pandas.api.types.is_re()": "reference/api/pandas.api.types.is_re.html", "pandas.api.types.is_re_compilable()": "reference/api/pandas.api.types.is_re_compilable.html", "pandas.api.types.is_scalar()": "reference/api/pandas.api.types.is_scalar.html", "pandas.api.types.is_signed_integer_dtype()": "reference/api/pandas.api.types.is_signed_integer_dtype.html", "pandas.api.types.is_sparse()": "reference/api/pandas.api.types.is_sparse.html", "pandas.api.types.is_string_dtype()": "reference/api/pandas.api.types.is_string_dtype.html", "pandas.api.types.is_timedelta64_dtype()": "reference/api/pandas.api.types.is_timedelta64_dtype.html", "pandas.api.types.is_timedelta64_ns_dtype()": "reference/api/pandas.api.types.is_timedelta64_ns_dtype.html", "pandas.api.types.is_unsigned_integer_dtype()": "reference/api/pandas.api.types.is_unsigned_integer_dtype.html", "pandas.api.types.pandas_dtype()": "reference/api/pandas.api.types.pandas_dtype.html", "pandas.api.types.union_categoricals()": "reference/api/pandas.api.types.union_categoricals.html", "pandas.array()": "reference/api/pandas.array.html", "pandas.bdate_range()": "reference/api/pandas.bdate_range.html", "pandas.concat()": "reference/api/pandas.concat.html", "pandas.crosstab()": "reference/api/pandas.crosstab.html", "pandas.cut()": "reference/api/pandas.cut.html", "pandas.date_range()": "reference/api/pandas.date_range.html", "pandas.describe_option()": "reference/api/pandas.describe_option.html", "pandas.eval()": "reference/api/pandas.eval.html", "pandas.factorize()": "reference/api/pandas.factorize.html", "pandas.get_dummies()": "reference/api/pandas.get_dummies.html", "pandas.get_option()": "reference/api/pandas.get_option.html", "pandas.IndexSlice": "reference/api/pandas.indexslice.html", "pandas.infer_freq()": "reference/api/pandas.infer_freq.html", "pandas.interval_range()": "reference/api/pandas.interval_range.html", "pandas.io.json.build_table_schema()": "reference/api/pandas.io.json.build_table_schema.html", "pandas.io.json.json_normalize()": "reference/api/pandas.io.json.json_normalize.html", "pandas.isna()": "reference/api/pandas.isna.html", "pandas.isnull()": "reference/api/pandas.isnull.html", "pandas.melt()": "reference/api/pandas.melt.html", "pandas.merge()": "reference/api/pandas.merge.html", "pandas.merge_asof()": "reference/api/pandas.merge_asof.html", "pandas.merge_ordered()": "reference/api/pandas.merge_ordered.html", "pandas.notna()": "reference/api/pandas.notna.html", "pandas.notnull()": "reference/api/pandas.notnull.html", "pandas.period_range()": "reference/api/pandas.period_range.html", "pandas.pivot()": "reference/api/pandas.pivot.html", "pandas.pivot_table()": "reference/api/pandas.pivot_table.html", "pandas.plotting.andrews_curves()": "reference/api/pandas.plotting.andrews_curves.html", "pandas.plotting.bootstrap_plot()": "reference/api/pandas.plotting.bootstrap_plot.html", "pandas.plotting.deregister_matplotlib_converters()": "reference/api/pandas.plotting.deregister_matplotlib_converters.html", "pandas.plotting.lag_plot()": "reference/api/pandas.plotting.lag_plot.html", "pandas.plotting.parallel_coordinates()": "reference/api/pandas.plotting.parallel_coordinates.html", "pandas.plotting.radviz()": "reference/api/pandas.plotting.radviz.html", "pandas.plotting.register_matplotlib_converters()": "reference/api/pandas.plotting.register_matplotlib_converters.html", "pandas.plotting.scatter_matrix()": "reference/api/pandas.plotting.scatter_matrix.html", "pandas.qcut()": "reference/api/pandas.qcut.html", "pandas.read_clipboard()": "reference/api/pandas.read_clipboard.html", "pandas.read_csv()": "reference/api/pandas.read_csv.html", "pandas.read_excel()": "reference/api/pandas.read_excel.html", "pandas.read_feather()": "reference/api/pandas.read_feather.html", "pandas.read_fwf()": "reference/api/pandas.read_fwf.html", "pandas.read_gbq()": "reference/api/pandas.read_gbq.html", "pandas.read_hdf()": "reference/api/pandas.read_hdf.html", "pandas.read_html()": "reference/api/pandas.read_html.html", "pandas.read_json()": "reference/api/pandas.read_json.html", "pandas.read_msgpack()": "reference/api/pandas.read_msgpack.html", "pandas.read_parquet()": "reference/api/pandas.read_parquet.html", "pandas.read_pickle()": "reference/api/pandas.read_pickle.html", "pandas.read_sas()": "reference/api/pandas.read_sas.html", "pandas.read_sql()": "reference/api/pandas.read_sql.html", "pandas.read_sql_query()": "reference/api/pandas.read_sql_query.html", "pandas.read_sql_table()": "reference/api/pandas.read_sql_table.html", "pandas.read_stata()": "reference/api/pandas.read_stata.html", "pandas.read_table()": "reference/api/pandas.read_table.html", "pandas.reset_option()": "reference/api/pandas.reset_option.html", "pandas.set_option()": "reference/api/pandas.set_option.html", "pandas.test()": "reference/api/pandas.test.html", "pandas.testing.assert_frame_equal()": "reference/api/pandas.testing.assert_frame_equal.html", "pandas.testing.assert_index_equal()": "reference/api/pandas.testing.assert_index_equal.html", "pandas.testing.assert_series_equal()": "reference/api/pandas.testing.assert_series_equal.html", "pandas.timedelta_range()": "reference/api/pandas.timedelta_range.html", "pandas.to_datetime()": "reference/api/pandas.to_datetime.html", "pandas.to_numeric()": "reference/api/pandas.to_numeric.html", "pandas.to_timedelta()": "reference/api/pandas.to_timedelta.html", "pandas.tseries.frequencies.to_offset()": "reference/api/pandas.tseries.frequencies.to_offset.html", "pandas.tseries.offsets.BDay[source]": "reference/api/pandas.tseries.offsets.bday.html", "pandas.tseries.offsets.BMonthBegin[source]": "reference/api/pandas.tseries.offsets.bmonthbegin.html", "pandas.tseries.offsets.BMonthEnd[source]": "reference/api/pandas.tseries.offsets.bmonthend.html", "pandas.tseries.offsets.CBMonthBegin[source]": "reference/api/pandas.tseries.offsets.cbmonthbegin.html", "pandas.tseries.offsets.CBMonthEnd[source]": "reference/api/pandas.tseries.offsets.cbmonthend.html", "pandas.tseries.offsets.CDay[source]": "reference/api/pandas.tseries.offsets.cday.html", "pandas.unique()": "reference/api/pandas.unique.html", "pandas.util.hash_array()": "reference/api/pandas.util.hash_array.html", "pandas.util.hash_pandas_object()": "reference/api/pandas.util.hash_pandas_object.html", "pandas.wide_to_long()": "reference/api/pandas.wide_to_long.html", "Panel": "reference/panel.html", "Period": "reference/api/pandas.period.html", "Period.asfreq()": "reference/api/pandas.period.asfreq.html", "Period.day": "reference/api/pandas.period.day.html", "Period.dayofweek": "reference/api/pandas.period.dayofweek.html", "Period.dayofyear": "reference/api/pandas.period.dayofyear.html", "Period.daysinmonth": "reference/api/pandas.period.daysinmonth.html", "Period.days_in_month": "reference/api/pandas.period.days_in_month.html", "Period.end_time": "reference/api/pandas.period.end_time.html", "Period.freq": "reference/api/pandas.period.freq.html", "Period.freqstr": "reference/api/pandas.period.freqstr.html", "Period.hour": "reference/api/pandas.period.hour.html", "Period.is_leap_year": "reference/api/pandas.period.is_leap_year.html", "Period.minute": "reference/api/pandas.period.minute.html", "Period.month": "reference/api/pandas.period.month.html", "Period.now()": "reference/api/pandas.period.now.html", "Period.ordinal": "reference/api/pandas.period.ordinal.html", "Period.quarter": "reference/api/pandas.period.quarter.html", "Period.qyear": "reference/api/pandas.period.qyear.html", "Period.second": "reference/api/pandas.period.second.html", "Period.start_time": "reference/api/pandas.period.start_time.html", "Period.strftime()": "reference/api/pandas.period.strftime.html", "Period.to_timestamp()": "reference/api/pandas.period.to_timestamp.html", "Period.week": "reference/api/pandas.period.week.html", "Period.weekday": "reference/api/pandas.period.weekday.html", "Period.weekofyear": "reference/api/pandas.period.weekofyear.html", "Period.year": "reference/api/pandas.period.year.html", "PeriodDtype.freq": "reference/api/pandas.perioddtype.freq.html", "PeriodDtype[source]": "reference/api/pandas.perioddtype.html", "PeriodIndex.asfreq()": "reference/api/pandas.periodindex.asfreq.html", "PeriodIndex.day": "reference/api/pandas.periodindex.day.html", "PeriodIndex.dayofweek": "reference/api/pandas.periodindex.dayofweek.html", "PeriodIndex.dayofyear": "reference/api/pandas.periodindex.dayofyear.html", "PeriodIndex.daysinmonth": "reference/api/pandas.periodindex.daysinmonth.html", "PeriodIndex.days_in_month": "reference/api/pandas.periodindex.days_in_month.html", "PeriodIndex.end_time": "reference/api/pandas.periodindex.end_time.html", "PeriodIndex.freq": "reference/api/pandas.periodindex.freq.html", "PeriodIndex.freqstr": "reference/api/pandas.periodindex.freqstr.html", "PeriodIndex.hour": "reference/api/pandas.periodindex.hour.html", "PeriodIndex.is_leap_year": "reference/api/pandas.periodindex.is_leap_year.html", "PeriodIndex.minute": "reference/api/pandas.periodindex.minute.html", "PeriodIndex.month": "reference/api/pandas.periodindex.month.html", "PeriodIndex.quarter": "reference/api/pandas.periodindex.quarter.html", "PeriodIndex.qyear": "reference/api/pandas.periodindex.qyear.html", "PeriodIndex.second": "reference/api/pandas.periodindex.second.html", "PeriodIndex.start_time": "reference/api/pandas.periodindex.start_time.html", "PeriodIndex.strftime()": "reference/api/pandas.periodindex.strftime.html", "PeriodIndex.to_timestamp()": "reference/api/pandas.periodindex.to_timestamp.html", "PeriodIndex.week": "reference/api/pandas.periodindex.week.html", "PeriodIndex.weekday": "reference/api/pandas.periodindex.weekday.html", "PeriodIndex.weekofyear": "reference/api/pandas.periodindex.weekofyear.html", "PeriodIndex.year": "reference/api/pandas.periodindex.year.html", "PeriodIndex[source]": "reference/api/pandas.periodindex.html", "Plotting": "reference/plotting.html", "QuarterBegin.apply()": "reference/api/pandas.tseries.offsets.quarterbegin.apply.html", "QuarterBegin.apply_index()": "reference/api/pandas.tseries.offsets.quarterbegin.apply_index.html", "QuarterBegin.base": "reference/api/pandas.tseries.offsets.quarterbegin.base.html", "QuarterBegin.copy()": "reference/api/pandas.tseries.offsets.quarterbegin.copy.html", "QuarterBegin.freqstr": "reference/api/pandas.tseries.offsets.quarterbegin.freqstr.html", "QuarterBegin.isAnchored()": "reference/api/pandas.tseries.offsets.quarterbegin.isanchored.html", "QuarterBegin.kwds": "reference/api/pandas.tseries.offsets.quarterbegin.kwds.html", "QuarterBegin.name": "reference/api/pandas.tseries.offsets.quarterbegin.name.html", "QuarterBegin.nanos": "reference/api/pandas.tseries.offsets.quarterbegin.nanos.html", "QuarterBegin.normalize": "reference/api/pandas.tseries.offsets.quarterbegin.normalize.html", "QuarterBegin.onOffset()": "reference/api/pandas.tseries.offsets.quarterbegin.onoffset.html", "QuarterBegin.rollback()": "reference/api/pandas.tseries.offsets.quarterbegin.rollback.html", "QuarterBegin.rollforward()": "reference/api/pandas.tseries.offsets.quarterbegin.rollforward.html", "QuarterBegin.rule_code": "reference/api/pandas.tseries.offsets.quarterbegin.rule_code.html", "QuarterEnd.apply()": "reference/api/pandas.tseries.offsets.quarterend.apply.html", "QuarterEnd.apply_index()": "reference/api/pandas.tseries.offsets.quarterend.apply_index.html", "QuarterEnd.base": "reference/api/pandas.tseries.offsets.quarterend.base.html", "QuarterEnd.copy()": "reference/api/pandas.tseries.offsets.quarterend.copy.html", "QuarterEnd.freqstr": "reference/api/pandas.tseries.offsets.quarterend.freqstr.html", "QuarterEnd.isAnchored()": "reference/api/pandas.tseries.offsets.quarterend.isanchored.html", "QuarterEnd.kwds": "reference/api/pandas.tseries.offsets.quarterend.kwds.html", "QuarterEnd.name": "reference/api/pandas.tseries.offsets.quarterend.name.html", "QuarterEnd.nanos": "reference/api/pandas.tseries.offsets.quarterend.nanos.html", "QuarterEnd.normalize": "reference/api/pandas.tseries.offsets.quarterend.normalize.html", "QuarterEnd.onOffset()": "reference/api/pandas.tseries.offsets.quarterend.onoffset.html", "QuarterEnd.rollback()": "reference/api/pandas.tseries.offsets.quarterend.rollback.html", "QuarterEnd.rollforward()": "reference/api/pandas.tseries.offsets.quarterend.rollforward.html", "QuarterEnd.rule_code": "reference/api/pandas.tseries.offsets.quarterend.rule_code.html", "QuarterOffset.apply()": "reference/api/pandas.tseries.offsets.quarteroffset.apply.html", "QuarterOffset.apply_index()": "reference/api/pandas.tseries.offsets.quarteroffset.apply_index.html", "QuarterOffset.base": "reference/api/pandas.tseries.offsets.quarteroffset.base.html", "QuarterOffset.copy()": "reference/api/pandas.tseries.offsets.quarteroffset.copy.html", "QuarterOffset.freqstr": "reference/api/pandas.tseries.offsets.quarteroffset.freqstr.html", "QuarterOffset.isAnchored()": "reference/api/pandas.tseries.offsets.quarteroffset.isanchored.html", "QuarterOffset.kwds": "reference/api/pandas.tseries.offsets.quarteroffset.kwds.html", "QuarterOffset.name": "reference/api/pandas.tseries.offsets.quarteroffset.name.html", "QuarterOffset.nanos": "reference/api/pandas.tseries.offsets.quarteroffset.nanos.html", "QuarterOffset.normalize": "reference/api/pandas.tseries.offsets.quarteroffset.normalize.html", "QuarterOffset.onOffset()": "reference/api/pandas.tseries.offsets.quarteroffset.onoffset.html", "QuarterOffset.rollback()": "reference/api/pandas.tseries.offsets.quarteroffset.rollback.html", "QuarterOffset.rollforward()": "reference/api/pandas.tseries.offsets.quarteroffset.rollforward.html", "QuarterOffset.rule_code": "reference/api/pandas.tseries.offsets.quarteroffset.rule_code.html", "RangeIndex.from_range()": "reference/api/pandas.rangeindex.from_range.html", "RangeIndex.start": "reference/api/pandas.rangeindex.start.html", "RangeIndex.step": "reference/api/pandas.rangeindex.step.html", "RangeIndex.stop": "reference/api/pandas.rangeindex.stop.html", "RangeIndex[source]": "reference/api/pandas.rangeindex.html", "Resampler.aggregate()": "reference/api/pandas.core.resample.resampler.aggregate.html", "Resampler.apply()": "reference/api/pandas.core.resample.resampler.apply.html", "Resampler.asfreq()": "reference/api/pandas.core.resample.resampler.asfreq.html", "Resampler.backfill()": "reference/api/pandas.core.resample.resampler.backfill.html", "Resampler.bfill()": "reference/api/pandas.core.resample.resampler.bfill.html", "Resampler.count()": "reference/api/pandas.core.resample.resampler.count.html", "Resampler.ffill()": "reference/api/pandas.core.resample.resampler.ffill.html", "Resampler.fillna()": "reference/api/pandas.core.resample.resampler.fillna.html", "Resampler.first()": "reference/api/pandas.core.resample.resampler.first.html", "Resampler.get_group()": "reference/api/pandas.core.resample.resampler.get_group.html", "Resampler.groups": "reference/api/pandas.core.resample.resampler.groups.html", "Resampler.indices": "reference/api/pandas.core.resample.resampler.indices.html", "Resampler.interpolate()": "reference/api/pandas.core.resample.resampler.interpolate.html", "Resampler.last()": "reference/api/pandas.core.resample.resampler.last.html", "Resampler.max()": "reference/api/pandas.core.resample.resampler.max.html", "Resampler.mean()": "reference/api/pandas.core.resample.resampler.mean.html", "Resampler.median()": "reference/api/pandas.core.resample.resampler.median.html", "Resampler.min()": "reference/api/pandas.core.resample.resampler.min.html", "Resampler.nearest()": "reference/api/pandas.core.resample.resampler.nearest.html", "Resampler.nunique()": "reference/api/pandas.core.resample.resampler.nunique.html", "Resampler.ohlc()": "reference/api/pandas.core.resample.resampler.ohlc.html", "Resampler.pad()": "reference/api/pandas.core.resample.resampler.pad.html", "Resampler.pipe()": "reference/api/pandas.core.resample.resampler.pipe.html", "Resampler.prod()": "reference/api/pandas.core.resample.resampler.prod.html", "Resampler.quantile()": "reference/api/pandas.core.resample.resampler.quantile.html", "Resampler.sem()": "reference/api/pandas.core.resample.resampler.sem.html", "Resampler.size()": "reference/api/pandas.core.resample.resampler.size.html", "Resampler.std()": "reference/api/pandas.core.resample.resampler.std.html", "Resampler.sum()": "reference/api/pandas.core.resample.resampler.sum.html", "Resampler.transform()": "reference/api/pandas.core.resample.resampler.transform.html", "Resampler.var()": "reference/api/pandas.core.resample.resampler.var.html", "Resampler.__iter__()": "reference/api/pandas.core.resample.resampler.__iter__.html", "Resampling": "reference/resampling.html", "Rolling.aggregate()": "reference/api/pandas.core.window.rolling.aggregate.html", "Rolling.apply()": "reference/api/pandas.core.window.rolling.apply.html", "Rolling.corr()": "reference/api/pandas.core.window.rolling.corr.html", "Rolling.count()": "reference/api/pandas.core.window.rolling.count.html", "Rolling.cov()": "reference/api/pandas.core.window.rolling.cov.html", "Rolling.kurt()": "reference/api/pandas.core.window.rolling.kurt.html", "Rolling.max()": "reference/api/pandas.core.window.rolling.max.html", "Rolling.mean()": "reference/api/pandas.core.window.rolling.mean.html", "Rolling.median()": "reference/api/pandas.core.window.rolling.median.html", "Rolling.min()": "reference/api/pandas.core.window.rolling.min.html", "Rolling.quantile()": "reference/api/pandas.core.window.rolling.quantile.html", "Rolling.skew()": "reference/api/pandas.core.window.rolling.skew.html", "Rolling.std()": "reference/api/pandas.core.window.rolling.std.html", "Rolling.sum()": "reference/api/pandas.core.window.rolling.sum.html", "Rolling.var()": "reference/api/pandas.core.window.rolling.var.html", "Second.apply()": "reference/api/pandas.tseries.offsets.second.apply.html", "Second.apply_index()": "reference/api/pandas.tseries.offsets.second.apply_index.html", "Second.base": "reference/api/pandas.tseries.offsets.second.base.html", "Second.copy()": "reference/api/pandas.tseries.offsets.second.copy.html", "Second.delta": "reference/api/pandas.tseries.offsets.second.delta.html", "Second.freqstr": "reference/api/pandas.tseries.offsets.second.freqstr.html", "Second.isAnchored()": "reference/api/pandas.tseries.offsets.second.isanchored.html", "Second.kwds": "reference/api/pandas.tseries.offsets.second.kwds.html", "Second.name": "reference/api/pandas.tseries.offsets.second.name.html", "Second.nanos": "reference/api/pandas.tseries.offsets.second.nanos.html", "Second.normalize": "reference/api/pandas.tseries.offsets.second.normalize.html", "Second.onOffset()": "reference/api/pandas.tseries.offsets.second.onoffset.html", "Second.rollback()": "reference/api/pandas.tseries.offsets.second.rollback.html", "Second.rollforward()": "reference/api/pandas.tseries.offsets.second.rollforward.html", "Second.rule_code": "reference/api/pandas.tseries.offsets.second.rule_code.html", "SemiMonthBegin.apply()": "reference/api/pandas.tseries.offsets.semimonthbegin.apply.html", "SemiMonthBegin.apply_index()": "reference/api/pandas.tseries.offsets.semimonthbegin.apply_index.html", "SemiMonthBegin.base": "reference/api/pandas.tseries.offsets.semimonthbegin.base.html", "SemiMonthBegin.copy()": "reference/api/pandas.tseries.offsets.semimonthbegin.copy.html", "SemiMonthBegin.freqstr": "reference/api/pandas.tseries.offsets.semimonthbegin.freqstr.html", "SemiMonthBegin.isAnchored()": "reference/api/pandas.tseries.offsets.semimonthbegin.isanchored.html", "SemiMonthBegin.kwds": "reference/api/pandas.tseries.offsets.semimonthbegin.kwds.html", "SemiMonthBegin.name": "reference/api/pandas.tseries.offsets.semimonthbegin.name.html", "SemiMonthBegin.nanos": "reference/api/pandas.tseries.offsets.semimonthbegin.nanos.html", "SemiMonthBegin.normalize": "reference/api/pandas.tseries.offsets.semimonthbegin.normalize.html", "SemiMonthBegin.onOffset()": "reference/api/pandas.tseries.offsets.semimonthbegin.onoffset.html", "SemiMonthBegin.rollback()": "reference/api/pandas.tseries.offsets.semimonthbegin.rollback.html", "SemiMonthBegin.rollforward()": "reference/api/pandas.tseries.offsets.semimonthbegin.rollforward.html", "SemiMonthBegin.rule_code": "reference/api/pandas.tseries.offsets.semimonthbegin.rule_code.html", "SemiMonthEnd.apply()": "reference/api/pandas.tseries.offsets.semimonthend.apply.html", "SemiMonthEnd.apply_index()": "reference/api/pandas.tseries.offsets.semimonthend.apply_index.html", "SemiMonthEnd.base": "reference/api/pandas.tseries.offsets.semimonthend.base.html", "SemiMonthEnd.copy()": "reference/api/pandas.tseries.offsets.semimonthend.copy.html", "SemiMonthEnd.freqstr": "reference/api/pandas.tseries.offsets.semimonthend.freqstr.html", "SemiMonthEnd.isAnchored()": "reference/api/pandas.tseries.offsets.semimonthend.isanchored.html", "SemiMonthEnd.kwds": "reference/api/pandas.tseries.offsets.semimonthend.kwds.html", "SemiMonthEnd.name": "reference/api/pandas.tseries.offsets.semimonthend.name.html", "SemiMonthEnd.nanos": "reference/api/pandas.tseries.offsets.semimonthend.nanos.html", "SemiMonthEnd.normalize": "reference/api/pandas.tseries.offsets.semimonthend.normalize.html", "SemiMonthEnd.onOffset()": "reference/api/pandas.tseries.offsets.semimonthend.onoffset.html", "SemiMonthEnd.rollback()": "reference/api/pandas.tseries.offsets.semimonthend.rollback.html", "SemiMonthEnd.rollforward()": "reference/api/pandas.tseries.offsets.semimonthend.rollforward.html", "SemiMonthEnd.rule_code": "reference/api/pandas.tseries.offsets.semimonthend.rule_code.html", "SemiMonthOffset.apply()": "reference/api/pandas.tseries.offsets.semimonthoffset.apply.html", "SemiMonthOffset.apply_index()": "reference/api/pandas.tseries.offsets.semimonthoffset.apply_index.html", "SemiMonthOffset.base": "reference/api/pandas.tseries.offsets.semimonthoffset.base.html", "SemiMonthOffset.copy()": "reference/api/pandas.tseries.offsets.semimonthoffset.copy.html", "SemiMonthOffset.freqstr": "reference/api/pandas.tseries.offsets.semimonthoffset.freqstr.html", "SemiMonthOffset.isAnchored()": "reference/api/pandas.tseries.offsets.semimonthoffset.isanchored.html", "SemiMonthOffset.kwds": "reference/api/pandas.tseries.offsets.semimonthoffset.kwds.html", "SemiMonthOffset.name": "reference/api/pandas.tseries.offsets.semimonthoffset.name.html", "SemiMonthOffset.nanos": "reference/api/pandas.tseries.offsets.semimonthoffset.nanos.html", "SemiMonthOffset.normalize": "reference/api/pandas.tseries.offsets.semimonthoffset.normalize.html", "SemiMonthOffset.onOffset()": "reference/api/pandas.tseries.offsets.semimonthoffset.onoffset.html", "SemiMonthOffset.rollback()": "reference/api/pandas.tseries.offsets.semimonthoffset.rollback.html", "SemiMonthOffset.rollforward()": "reference/api/pandas.tseries.offsets.semimonthoffset.rollforward.html", "SemiMonthOffset.rule_code": "reference/api/pandas.tseries.offsets.semimonthoffset.rule_code.html", "Series": "reference/series.html", "Series()": "reference/api/pandas.series.html", "Series.abs()": "reference/api/pandas.series.abs.html", "Series.add()": "reference/api/pandas.series.add.html", "Series.add_prefix()": "reference/api/pandas.series.add_prefix.html", "Series.add_suffix()": "reference/api/pandas.series.add_suffix.html", "Series.agg()": "reference/api/pandas.series.agg.html", "Series.aggregate()": "reference/api/pandas.series.aggregate.html", "Series.align()": "reference/api/pandas.series.align.html", "Series.all()": "reference/api/pandas.series.all.html", "Series.any()": "reference/api/pandas.series.any.html", "Series.append()": "reference/api/pandas.series.append.html", "Series.apply()": "reference/api/pandas.series.apply.html", "Series.argmax()": "reference/api/pandas.series.argmax.html", "Series.argmin()": "reference/api/pandas.series.argmin.html", "Series.argsort()": "reference/api/pandas.series.argsort.html", "Series.array": "reference/api/pandas.series.array.html", "Series.asfreq()": "reference/api/pandas.series.asfreq.html", "Series.asobject": "reference/api/pandas.series.asobject.html", "Series.asof()": "reference/api/pandas.series.asof.html", "Series.astype()": "reference/api/pandas.series.astype.html", "Series.as_blocks()": "reference/api/pandas.series.as_blocks.html", "Series.as_matrix()": "reference/api/pandas.series.as_matrix.html", "Series.at": "reference/api/pandas.series.at.html", "Series.at_time()": "reference/api/pandas.series.at_time.html", "Series.autocorr()": "reference/api/pandas.series.autocorr.html", "Series.axes": "reference/api/pandas.series.axes.html", "Series.base": "reference/api/pandas.series.base.html", "Series.between()": "reference/api/pandas.series.between.html", "Series.between_time()": "reference/api/pandas.series.between_time.html", "Series.bfill()": "reference/api/pandas.series.bfill.html", "Series.blocks": "reference/api/pandas.series.blocks.html", "Series.bool()": "reference/api/pandas.series.bool.html", "Series.cat()": "reference/api/pandas.series.cat.html", "Series.cat.add_categories()": "reference/api/pandas.series.cat.add_categories.html", "Series.cat.as_ordered()": "reference/api/pandas.series.cat.as_ordered.html", "Series.cat.as_unordered()": "reference/api/pandas.series.cat.as_unordered.html", "Series.cat.categories": "reference/api/pandas.series.cat.categories.html", "Series.cat.codes": "reference/api/pandas.series.cat.codes.html", "Series.cat.ordered": "reference/api/pandas.series.cat.ordered.html", "Series.cat.remove_categories()": "reference/api/pandas.series.cat.remove_categories.html", "Series.cat.remove_unused_categories()": "reference/api/pandas.series.cat.remove_unused_categories.html", "Series.cat.rename_categories()": "reference/api/pandas.series.cat.rename_categories.html", "Series.cat.reorder_categories()": "reference/api/pandas.series.cat.reorder_categories.html", "Series.cat.set_categories()": "reference/api/pandas.series.cat.set_categories.html", "Series.clip()": "reference/api/pandas.series.clip.html", "Series.clip_lower()": "reference/api/pandas.series.clip_lower.html", "Series.clip_upper()": "reference/api/pandas.series.clip_upper.html", "Series.combine()": "reference/api/pandas.series.combine.html", "Series.combine_first()": "reference/api/pandas.series.combine_first.html", "Series.compound()": "reference/api/pandas.series.compound.html", "Series.compress()": "reference/api/pandas.series.compress.html", "Series.copy()": "reference/api/pandas.series.copy.html", "Series.corr()": "reference/api/pandas.series.corr.html", "Series.count()": "reference/api/pandas.series.count.html", "Series.cov()": "reference/api/pandas.series.cov.html", "Series.cummax()": "reference/api/pandas.series.cummax.html", "Series.cummin()": "reference/api/pandas.series.cummin.html", "Series.cumprod()": "reference/api/pandas.series.cumprod.html", "Series.cumsum()": "reference/api/pandas.series.cumsum.html", "Series.data": "reference/api/pandas.series.data.html", "Series.describe()": "reference/api/pandas.series.describe.html", "Series.diff()": "reference/api/pandas.series.diff.html", "Series.div()": "reference/api/pandas.series.div.html", "Series.divide()": "reference/api/pandas.series.divide.html", "Series.divmod()": "reference/api/pandas.series.divmod.html", "Series.dot()": "reference/api/pandas.series.dot.html", "Series.drop()": "reference/api/pandas.series.drop.html", "Series.droplevel()": "reference/api/pandas.series.droplevel.html", "Series.dropna()": "reference/api/pandas.series.dropna.html", "Series.drop_duplicates()": "reference/api/pandas.series.drop_duplicates.html", "Series.dt()": "reference/api/pandas.series.dt.html", "Series.dt.ceil()": "reference/api/pandas.series.dt.ceil.html", "Series.dt.components": "reference/api/pandas.series.dt.components.html", "Series.dt.date": "reference/api/pandas.series.dt.date.html", "Series.dt.day": "reference/api/pandas.series.dt.day.html", "Series.dt.dayofweek": "reference/api/pandas.series.dt.dayofweek.html", "Series.dt.dayofyear": "reference/api/pandas.series.dt.dayofyear.html", "Series.dt.days": "reference/api/pandas.series.dt.days.html", "Series.dt.daysinmonth": "reference/api/pandas.series.dt.daysinmonth.html", "Series.dt.days_in_month": "reference/api/pandas.series.dt.days_in_month.html", "Series.dt.day_name()": "reference/api/pandas.series.dt.day_name.html", "Series.dt.end_time": "reference/api/pandas.series.dt.end_time.html", "Series.dt.floor()": "reference/api/pandas.series.dt.floor.html", "Series.dt.freq": "reference/api/pandas.series.dt.freq.html", "Series.dt.hour": "reference/api/pandas.series.dt.hour.html", "Series.dt.is_leap_year": "reference/api/pandas.series.dt.is_leap_year.html", "Series.dt.is_month_end": "reference/api/pandas.series.dt.is_month_end.html", "Series.dt.is_month_start": "reference/api/pandas.series.dt.is_month_start.html", "Series.dt.is_quarter_end": "reference/api/pandas.series.dt.is_quarter_end.html", "Series.dt.is_quarter_start": "reference/api/pandas.series.dt.is_quarter_start.html", "Series.dt.is_year_end": "reference/api/pandas.series.dt.is_year_end.html", "Series.dt.is_year_start": "reference/api/pandas.series.dt.is_year_start.html", "Series.dt.microsecond": "reference/api/pandas.series.dt.microsecond.html", "Series.dt.microseconds": "reference/api/pandas.series.dt.microseconds.html", "Series.dt.minute": "reference/api/pandas.series.dt.minute.html", "Series.dt.month": "reference/api/pandas.series.dt.month.html", "Series.dt.month_name()": "reference/api/pandas.series.dt.month_name.html", "Series.dt.nanosecond": "reference/api/pandas.series.dt.nanosecond.html", "Series.dt.nanoseconds": "reference/api/pandas.series.dt.nanoseconds.html", "Series.dt.normalize()": "reference/api/pandas.series.dt.normalize.html", "Series.dt.quarter": "reference/api/pandas.series.dt.quarter.html", "Series.dt.qyear": "reference/api/pandas.series.dt.qyear.html", "Series.dt.round()": "reference/api/pandas.series.dt.round.html", "Series.dt.second": "reference/api/pandas.series.dt.second.html", "Series.dt.seconds": "reference/api/pandas.series.dt.seconds.html", "Series.dt.start_time": "reference/api/pandas.series.dt.start_time.html", "Series.dt.strftime()": "reference/api/pandas.series.dt.strftime.html", "Series.dt.time": "reference/api/pandas.series.dt.time.html", "Series.dt.timetz": "reference/api/pandas.series.dt.timetz.html", "Series.dt.total_seconds()": "reference/api/pandas.series.dt.total_seconds.html", "Series.dt.to_period()": "reference/api/pandas.series.dt.to_period.html", "Series.dt.to_pydatetime()": "reference/api/pandas.series.dt.to_pydatetime.html", "Series.dt.to_pytimedelta()": "reference/api/pandas.series.dt.to_pytimedelta.html", "Series.dt.tz": "reference/api/pandas.series.dt.tz.html", "Series.dt.tz_convert()": "reference/api/pandas.series.dt.tz_convert.html", "Series.dt.tz_localize()": "reference/api/pandas.series.dt.tz_localize.html", "Series.dt.week": "reference/api/pandas.series.dt.week.html", "Series.dt.weekday": "reference/api/pandas.series.dt.weekday.html", "Series.dt.weekofyear": "reference/api/pandas.series.dt.weekofyear.html", "Series.dt.year": "reference/api/pandas.series.dt.year.html", "Series.dtype": "reference/api/pandas.series.dtype.html", "Series.dtypes": "reference/api/pandas.series.dtypes.html", "Series.duplicated()": "reference/api/pandas.series.duplicated.html", "Series.empty": "reference/api/pandas.series.empty.html", "Series.eq()": "reference/api/pandas.series.eq.html", "Series.equals()": "reference/api/pandas.series.equals.html", "Series.ewm()": "reference/api/pandas.series.ewm.html", "Series.expanding()": "reference/api/pandas.series.expanding.html", "Series.explode()": "reference/api/pandas.series.explode.html", "Series.factorize()": "reference/api/pandas.series.factorize.html", "Series.ffill()": "reference/api/pandas.series.ffill.html", "Series.fillna()": "reference/api/pandas.series.fillna.html", "Series.filter()": "reference/api/pandas.series.filter.html", "Series.first()": "reference/api/pandas.series.first.html", "Series.first_valid_index()": "reference/api/pandas.series.first_valid_index.html", "Series.flags": "reference/api/pandas.series.flags.html", "Series.floordiv()": "reference/api/pandas.series.floordiv.html", "Series.from_array()": "reference/api/pandas.series.from_array.html", "Series.ftype": "reference/api/pandas.series.ftype.html", "Series.ftypes": "reference/api/pandas.series.ftypes.html", "Series.ge()": "reference/api/pandas.series.ge.html", "Series.get()": "reference/api/pandas.series.get.html", "Series.get_dtype_counts()": "reference/api/pandas.series.get_dtype_counts.html", "Series.get_ftype_counts()": "reference/api/pandas.series.get_ftype_counts.html", "Series.get_value()": "reference/api/pandas.series.get_value.html", "Series.get_values()": "reference/api/pandas.series.get_values.html", "Series.groupby()": "reference/api/pandas.series.groupby.html", "Series.gt()": "reference/api/pandas.series.gt.html", "Series.hasnans": "reference/api/pandas.series.hasnans.html", "Series.head()": "reference/api/pandas.series.head.html", "Series.hist()": "reference/api/pandas.series.hist.html", "Series.iat": "reference/api/pandas.series.iat.html", "Series.idxmax()": "reference/api/pandas.series.idxmax.html", "Series.idxmin()": "reference/api/pandas.series.idxmin.html", "Series.iloc": "reference/api/pandas.series.iloc.html", "Series.imag": "reference/api/pandas.series.imag.html", "Series.index": "reference/api/pandas.series.index.html", "Series.infer_objects()": "reference/api/pandas.series.infer_objects.html", "Series.interpolate()": "reference/api/pandas.series.interpolate.html", "Series.isin()": "reference/api/pandas.series.isin.html", "Series.isna()": "reference/api/pandas.series.isna.html", "Series.isnull()": "reference/api/pandas.series.isnull.html", "Series.is_copy": "reference/api/pandas.series.is_copy.html", "Series.is_monotonic": "reference/api/pandas.series.is_monotonic.html", "Series.is_monotonic_decreasing": "reference/api/pandas.series.is_monotonic_decreasing.html", "Series.is_monotonic_increasing": "reference/api/pandas.series.is_monotonic_increasing.html", "Series.is_unique": "reference/api/pandas.series.is_unique.html", "Series.item()": "reference/api/pandas.series.item.html", "Series.items()": "reference/api/pandas.series.items.html", "Series.itemsize": "reference/api/pandas.series.itemsize.html", "Series.iteritems()": "reference/api/pandas.series.iteritems.html", "Series.ix": "reference/api/pandas.series.ix.html", "Series.keys()": "reference/api/pandas.series.keys.html", "Series.kurt()": "reference/api/pandas.series.kurt.html", "Series.kurtosis()": "reference/api/pandas.series.kurtosis.html", "Series.last()": "reference/api/pandas.series.last.html", "Series.last_valid_index()": "reference/api/pandas.series.last_valid_index.html", "Series.le()": "reference/api/pandas.series.le.html", "Series.loc": "reference/api/pandas.series.loc.html", "Series.lt()": "reference/api/pandas.series.lt.html", "Series.mad()": "reference/api/pandas.series.mad.html", "Series.map()": "reference/api/pandas.series.map.html", "Series.mask()": "reference/api/pandas.series.mask.html", "Series.max()": "reference/api/pandas.series.max.html", "Series.mean()": "reference/api/pandas.series.mean.html", "Series.median()": "reference/api/pandas.series.median.html", "Series.memory_usage()": "reference/api/pandas.series.memory_usage.html", "Series.min()": "reference/api/pandas.series.min.html", "Series.mod()": "reference/api/pandas.series.mod.html", "Series.mode()": "reference/api/pandas.series.mode.html", "Series.mul()": "reference/api/pandas.series.mul.html", "Series.multiply()": "reference/api/pandas.series.multiply.html", "Series.name": "reference/api/pandas.series.name.html", "Series.nbytes": "reference/api/pandas.series.nbytes.html", "Series.ndim": "reference/api/pandas.series.ndim.html", "Series.ne()": "reference/api/pandas.series.ne.html", "Series.nlargest()": "reference/api/pandas.series.nlargest.html", "Series.nonzero()": "reference/api/pandas.series.nonzero.html", "Series.notna()": "reference/api/pandas.series.notna.html", "Series.notnull()": "reference/api/pandas.series.notnull.html", "Series.nsmallest()": "reference/api/pandas.series.nsmallest.html", "Series.nunique()": "reference/api/pandas.series.nunique.html", "Series.pct_change()": "reference/api/pandas.series.pct_change.html", "Series.pipe()": "reference/api/pandas.series.pipe.html", "Series.plot()": "reference/api/pandas.series.plot.html", "Series.plot.area()": "reference/api/pandas.series.plot.area.html", "Series.plot.bar()": "reference/api/pandas.series.plot.bar.html", "Series.plot.barh()": "reference/api/pandas.series.plot.barh.html", "Series.plot.box()": "reference/api/pandas.series.plot.box.html", "Series.plot.density()": "reference/api/pandas.series.plot.density.html", "Series.plot.hist()": "reference/api/pandas.series.plot.hist.html", "Series.plot.kde()": "reference/api/pandas.series.plot.kde.html", "Series.plot.line()": "reference/api/pandas.series.plot.line.html", "Series.plot.pie()": "reference/api/pandas.series.plot.pie.html", "Series.pop()": "reference/api/pandas.series.pop.html", "Series.pow()": "reference/api/pandas.series.pow.html", "Series.prod()": "reference/api/pandas.series.prod.html", "Series.product()": "reference/api/pandas.series.product.html", "Series.ptp()": "reference/api/pandas.series.ptp.html", "Series.put()": "reference/api/pandas.series.put.html", "Series.quantile()": "reference/api/pandas.series.quantile.html", "Series.radd()": "reference/api/pandas.series.radd.html", "Series.rank()": "reference/api/pandas.series.rank.html", "Series.ravel()": "reference/api/pandas.series.ravel.html", "Series.rdiv()": "reference/api/pandas.series.rdiv.html", "Series.rdivmod()": "reference/api/pandas.series.rdivmod.html", "Series.real": "reference/api/pandas.series.real.html", "Series.reindex()": "reference/api/pandas.series.reindex.html", "Series.reindex_like()": "reference/api/pandas.series.reindex_like.html", "Series.rename()": "reference/api/pandas.series.rename.html", "Series.rename_axis()": "reference/api/pandas.series.rename_axis.html", "Series.reorder_levels()": "reference/api/pandas.series.reorder_levels.html", "Series.repeat()": "reference/api/pandas.series.repeat.html", "Series.replace()": "reference/api/pandas.series.replace.html", "Series.resample()": "reference/api/pandas.series.resample.html", "Series.reset_index()": "reference/api/pandas.series.reset_index.html", "Series.rfloordiv()": "reference/api/pandas.series.rfloordiv.html", "Series.rmod()": "reference/api/pandas.series.rmod.html", "Series.rmul()": "reference/api/pandas.series.rmul.html", "Series.rolling()": "reference/api/pandas.series.rolling.html", "Series.round()": "reference/api/pandas.series.round.html", "Series.rpow()": "reference/api/pandas.series.rpow.html", "Series.rsub()": "reference/api/pandas.series.rsub.html", "Series.rtruediv()": "reference/api/pandas.series.rtruediv.html", "Series.sample()": "reference/api/pandas.series.sample.html", "Series.searchsorted()": "reference/api/pandas.series.searchsorted.html", "Series.sem()": "reference/api/pandas.series.sem.html", "Series.set_axis()": "reference/api/pandas.series.set_axis.html", "Series.set_value()": "reference/api/pandas.series.set_value.html", "Series.shape": "reference/api/pandas.series.shape.html", "Series.shift()": "reference/api/pandas.series.shift.html", "Series.size": "reference/api/pandas.series.size.html", "Series.skew()": "reference/api/pandas.series.skew.html", "Series.slice_shift()": "reference/api/pandas.series.slice_shift.html", "Series.sort_index()": "reference/api/pandas.series.sort_index.html", "Series.sort_values()": "reference/api/pandas.series.sort_values.html", "Series.sparse()": "reference/api/pandas.series.sparse.html", "Series.sparse.density": "reference/api/pandas.series.sparse.density.html", "Series.sparse.fill_value": "reference/api/pandas.series.sparse.fill_value.html", "Series.sparse.npoints": "reference/api/pandas.series.sparse.npoints.html", "Series.sparse.sp_values": "reference/api/pandas.series.sparse.sp_values.html", "Series.squeeze()": "reference/api/pandas.series.squeeze.html", "Series.std()": "reference/api/pandas.series.std.html", "Series.str()": "reference/api/pandas.series.str.html", "Series.str.capitalize()": "reference/api/pandas.series.str.capitalize.html", "Series.str.casefold()": "reference/api/pandas.series.str.casefold.html", "Series.str.cat()": "reference/api/pandas.series.str.cat.html", "Series.str.center()": "reference/api/pandas.series.str.center.html", "Series.str.contains()": "reference/api/pandas.series.str.contains.html", "Series.str.count()": "reference/api/pandas.series.str.count.html", "Series.str.decode()": "reference/api/pandas.series.str.decode.html", "Series.str.encode()": "reference/api/pandas.series.str.encode.html", "Series.str.endswith()": "reference/api/pandas.series.str.endswith.html", "Series.str.extract()": "reference/api/pandas.series.str.extract.html", "Series.str.extractall()": "reference/api/pandas.series.str.extractall.html", "Series.str.find()": "reference/api/pandas.series.str.find.html", "Series.str.findall()": "reference/api/pandas.series.str.findall.html", "Series.str.get()": "reference/api/pandas.series.str.get.html", "Series.str.get_dummies()": "reference/api/pandas.series.str.get_dummies.html", "Series.str.index()": "reference/api/pandas.series.str.index.html", "Series.str.isalnum()": "reference/api/pandas.series.str.isalnum.html", "Series.str.isalpha()": "reference/api/pandas.series.str.isalpha.html", "Series.str.isdecimal()": "reference/api/pandas.series.str.isdecimal.html", "Series.str.isdigit()": "reference/api/pandas.series.str.isdigit.html", "Series.str.islower()": "reference/api/pandas.series.str.islower.html", "Series.str.isnumeric()": "reference/api/pandas.series.str.isnumeric.html", "Series.str.isspace()": "reference/api/pandas.series.str.isspace.html", "Series.str.istitle()": "reference/api/pandas.series.str.istitle.html", "Series.str.isupper()": "reference/api/pandas.series.str.isupper.html", "Series.str.join()": "reference/api/pandas.series.str.join.html", "Series.str.len()": "reference/api/pandas.series.str.len.html", "Series.str.ljust()": "reference/api/pandas.series.str.ljust.html", "Series.str.lower()": "reference/api/pandas.series.str.lower.html", "Series.str.lstrip()": "reference/api/pandas.series.str.lstrip.html", "Series.str.match()": "reference/api/pandas.series.str.match.html", "Series.str.normalize()": "reference/api/pandas.series.str.normalize.html", "Series.str.pad()": "reference/api/pandas.series.str.pad.html", "Series.str.partition()": "reference/api/pandas.series.str.partition.html", "Series.str.repeat()": "reference/api/pandas.series.str.repeat.html", "Series.str.replace()": "reference/api/pandas.series.str.replace.html", "Series.str.rfind()": "reference/api/pandas.series.str.rfind.html", "Series.str.rindex()": "reference/api/pandas.series.str.rindex.html", "Series.str.rjust()": "reference/api/pandas.series.str.rjust.html", "Series.str.rpartition()": "reference/api/pandas.series.str.rpartition.html", "Series.str.rsplit()": "reference/api/pandas.series.str.rsplit.html", "Series.str.rstrip()": "reference/api/pandas.series.str.rstrip.html", "Series.str.slice()": "reference/api/pandas.series.str.slice.html", "Series.str.slice_replace()": "reference/api/pandas.series.str.slice_replace.html", "Series.str.split()": "reference/api/pandas.series.str.split.html", "Series.str.startswith()": "reference/api/pandas.series.str.startswith.html", "Series.str.strip()": "reference/api/pandas.series.str.strip.html", "Series.str.swapcase()": "reference/api/pandas.series.str.swapcase.html", "Series.str.title()": "reference/api/pandas.series.str.title.html", "Series.str.translate()": "reference/api/pandas.series.str.translate.html", "Series.str.upper()": "reference/api/pandas.series.str.upper.html", "Series.str.wrap()": "reference/api/pandas.series.str.wrap.html", "Series.str.zfill()": "reference/api/pandas.series.str.zfill.html", "Series.strides": "reference/api/pandas.series.strides.html", "Series.sub()": "reference/api/pandas.series.sub.html", "Series.subtract()": "reference/api/pandas.series.subtract.html", "Series.sum()": "reference/api/pandas.series.sum.html", "Series.swapaxes()": "reference/api/pandas.series.swapaxes.html", "Series.swaplevel()": "reference/api/pandas.series.swaplevel.html", "Series.T": "reference/api/pandas.series.t.html", "Series.tail()": "reference/api/pandas.series.tail.html", "Series.take()": "reference/api/pandas.series.take.html", "Series.tolist()": "reference/api/pandas.series.tolist.html", "Series.to_clipboard()": "reference/api/pandas.series.to_clipboard.html", "Series.to_csv()": "reference/api/pandas.series.to_csv.html", "Series.to_dense()": "reference/api/pandas.series.to_dense.html", "Series.to_dict()": "reference/api/pandas.series.to_dict.html", "Series.to_excel()": "reference/api/pandas.series.to_excel.html", "Series.to_frame()": "reference/api/pandas.series.to_frame.html", "Series.to_hdf()": "reference/api/pandas.series.to_hdf.html", "Series.to_json()": "reference/api/pandas.series.to_json.html", "Series.to_latex()": "reference/api/pandas.series.to_latex.html", "Series.to_list()": "reference/api/pandas.series.to_list.html", "Series.to_msgpack()": "reference/api/pandas.series.to_msgpack.html", "Series.to_numpy()": "reference/api/pandas.series.to_numpy.html", "Series.to_period()": "reference/api/pandas.series.to_period.html", "Series.to_pickle()": "reference/api/pandas.series.to_pickle.html", "Series.to_sparse()": "reference/api/pandas.series.to_sparse.html", "Series.to_sql()": "reference/api/pandas.series.to_sql.html", "Series.to_string()": "reference/api/pandas.series.to_string.html", "Series.to_timestamp()": "reference/api/pandas.series.to_timestamp.html", "Series.to_xarray()": "reference/api/pandas.series.to_xarray.html", "Series.transform()": "reference/api/pandas.series.transform.html", "Series.transpose()": "reference/api/pandas.series.transpose.html", "Series.truediv()": "reference/api/pandas.series.truediv.html", "Series.truncate()": "reference/api/pandas.series.truncate.html", "Series.tshift()": "reference/api/pandas.series.tshift.html", "Series.tz_convert()": "reference/api/pandas.series.tz_convert.html", "Series.tz_localize()": "reference/api/pandas.series.tz_localize.html", "Series.unique()": "reference/api/pandas.series.unique.html", "Series.unstack()": "reference/api/pandas.series.unstack.html", "Series.update()": "reference/api/pandas.series.update.html", "Series.valid()": "reference/api/pandas.series.valid.html", "Series.values": "reference/api/pandas.series.values.html", "Series.value_counts()": "reference/api/pandas.series.value_counts.html", "Series.var()": "reference/api/pandas.series.var.html", "Series.view()": "reference/api/pandas.series.view.html", "Series.where()": "reference/api/pandas.series.where.html", "Series.xs()": "reference/api/pandas.series.xs.html", "Series.__array__()": "reference/api/pandas.series.__array__.html", "Series.__iter__()": "reference/api/pandas.series.__iter__.html", "SeriesGroupBy.is_monotonic_decreasing": "reference/api/pandas.core.groupby.seriesgroupby.is_monotonic_decreasing.html", "SeriesGroupBy.is_monotonic_increasing": "reference/api/pandas.core.groupby.seriesgroupby.is_monotonic_increasing.html", "SeriesGroupBy.nlargest": "reference/api/pandas.core.groupby.seriesgroupby.nlargest.html", "SeriesGroupBy.nsmallest": "reference/api/pandas.core.groupby.seriesgroupby.nsmallest.html", "SeriesGroupBy.nunique()": "reference/api/pandas.core.groupby.seriesgroupby.nunique.html", "SeriesGroupBy.unique": "reference/api/pandas.core.groupby.seriesgroupby.unique.html", "SeriesGroupBy.value_counts()": "reference/api/pandas.core.groupby.seriesgroupby.value_counts.html", "sparse.from_coo()": "reference/api/pandas.series.sparse.from_coo.html", "sparse.from_spmatrix()": "reference/api/pandas.dataframe.sparse.from_spmatrix.html", "sparse.to_coo()": "reference/api/pandas.series.sparse.to_coo.html", "sparse.to_dense()": "reference/api/pandas.dataframe.sparse.to_dense.html", "SparseArray()": "reference/api/pandas.sparsearray.html", "SparseDataFrame.to_coo()": "reference/api/pandas.sparsedataframe.to_coo.html", "SparseDtype()": "reference/api/pandas.sparsedtype.html", "SparseSeries.from_coo()": "reference/api/pandas.sparseseries.from_coo.html", "SparseSeries.to_coo()": "reference/api/pandas.sparseseries.to_coo.html", "StataReader.data()": "reference/api/pandas.io.stata.statareader.data.html", "StataReader.data_label": "reference/api/pandas.io.stata.statareader.data_label.html", "StataReader.value_labels()": "reference/api/pandas.io.stata.statareader.value_labels.html", "StataReader.variable_labels()": "reference/api/pandas.io.stata.statareader.variable_labels.html", "StataWriter.write_file()": "reference/api/pandas.io.stata.statawriter.write_file.html", "Style": "reference/style.html", "Styler.apply()": "reference/api/pandas.io.formats.style.styler.apply.html", "Styler.applymap()": "reference/api/pandas.io.formats.style.styler.applymap.html", "Styler.background_gradient()": "reference/api/pandas.io.formats.style.styler.background_gradient.html", "Styler.bar()": "reference/api/pandas.io.formats.style.styler.bar.html", "Styler.clear()": "reference/api/pandas.io.formats.style.styler.clear.html", "Styler.env": "reference/api/pandas.io.formats.style.styler.env.html", "Styler.export()": "reference/api/pandas.io.formats.style.styler.export.html", "Styler.format()": "reference/api/pandas.io.formats.style.styler.format.html", "Styler.from_custom_template()": "reference/api/pandas.io.formats.style.styler.from_custom_template.html", "Styler.hide_columns()": "reference/api/pandas.io.formats.style.styler.hide_columns.html", "Styler.hide_index()": "reference/api/pandas.io.formats.style.styler.hide_index.html", "Styler.highlight_max()": "reference/api/pandas.io.formats.style.styler.highlight_max.html", "Styler.highlight_min()": "reference/api/pandas.io.formats.style.styler.highlight_min.html", "Styler.highlight_null()": "reference/api/pandas.io.formats.style.styler.highlight_null.html", "Styler.loader": "reference/api/pandas.io.formats.style.styler.loader.html", "Styler.pipe()": "reference/api/pandas.io.formats.style.styler.pipe.html", "Styler.render()": "reference/api/pandas.io.formats.style.styler.render.html", "Styler.set_caption()": "reference/api/pandas.io.formats.style.styler.set_caption.html", "Styler.set_precision()": "reference/api/pandas.io.formats.style.styler.set_precision.html", "Styler.set_properties()": "reference/api/pandas.io.formats.style.styler.set_properties.html", "Styler.set_table_attributes()": "reference/api/pandas.io.formats.style.styler.set_table_attributes.html", "Styler.set_table_styles()": "reference/api/pandas.io.formats.style.styler.set_table_styles.html", "Styler.set_uuid()": "reference/api/pandas.io.formats.style.styler.set_uuid.html", "Styler.template": "reference/api/pandas.io.formats.style.styler.template.html", "Styler.to_excel()": "reference/api/pandas.io.formats.style.styler.to_excel.html", "Styler.use()": "reference/api/pandas.io.formats.style.styler.use.html", "Styler.where()": "reference/api/pandas.io.formats.style.styler.where.html", "Tick.apply()": "reference/api/pandas.tseries.offsets.tick.apply.html", "Tick.apply_index()": "reference/api/pandas.tseries.offsets.tick.apply_index.html", "Tick.base": "reference/api/pandas.tseries.offsets.tick.base.html", "Tick.copy()": "reference/api/pandas.tseries.offsets.tick.copy.html", "Tick.delta": "reference/api/pandas.tseries.offsets.tick.delta.html", "Tick.freqstr": "reference/api/pandas.tseries.offsets.tick.freqstr.html", "Tick.isAnchored()": "reference/api/pandas.tseries.offsets.tick.isanchored.html", "Tick.kwds": "reference/api/pandas.tseries.offsets.tick.kwds.html", "Tick.name": "reference/api/pandas.tseries.offsets.tick.name.html", "Tick.nanos": "reference/api/pandas.tseries.offsets.tick.nanos.html", "Tick.normalize": "reference/api/pandas.tseries.offsets.tick.normalize.html", "Tick.onOffset()": "reference/api/pandas.tseries.offsets.tick.onoffset.html", "Tick.rollback()": "reference/api/pandas.tseries.offsets.tick.rollback.html", "Tick.rollforward()": "reference/api/pandas.tseries.offsets.tick.rollforward.html", "Tick.rule_code": "reference/api/pandas.tseries.offsets.tick.rule_code.html", "Timedelta": "reference/api/pandas.timedelta.html", "Timedelta.asm8": "reference/api/pandas.timedelta.asm8.html", "Timedelta.ceil()": "reference/api/pandas.timedelta.ceil.html", "Timedelta.components": "reference/api/pandas.timedelta.components.html", "Timedelta.days": "reference/api/pandas.timedelta.days.html", "Timedelta.delta": "reference/api/pandas.timedelta.delta.html", "Timedelta.floor()": "reference/api/pandas.timedelta.floor.html", "Timedelta.freq": "reference/api/pandas.timedelta.freq.html", "Timedelta.isoformat()": "reference/api/pandas.timedelta.isoformat.html", "Timedelta.is_populated": "reference/api/pandas.timedelta.is_populated.html", "Timedelta.max": "reference/api/pandas.timedelta.max.html", "Timedelta.microseconds": "reference/api/pandas.timedelta.microseconds.html", "Timedelta.min": "reference/api/pandas.timedelta.min.html", "Timedelta.nanoseconds": "reference/api/pandas.timedelta.nanoseconds.html", "Timedelta.resolution": "reference/api/pandas.timedelta.resolution.html", "Timedelta.resolution_string": "reference/api/pandas.timedelta.resolution_string.html", "Timedelta.round()": "reference/api/pandas.timedelta.round.html", "Timedelta.seconds": "reference/api/pandas.timedelta.seconds.html", "Timedelta.total_seconds()": "reference/api/pandas.timedelta.total_seconds.html", "Timedelta.to_numpy()": "reference/api/pandas.timedelta.to_numpy.html", "Timedelta.to_pytimedelta()": "reference/api/pandas.timedelta.to_pytimedelta.html", "Timedelta.to_timedelta64()": "reference/api/pandas.timedelta.to_timedelta64.html", "Timedelta.value": "reference/api/pandas.timedelta.value.html", "Timedelta.view()": "reference/api/pandas.timedelta.view.html", "TimedeltaIndex.ceil()": "reference/api/pandas.timedeltaindex.ceil.html", "TimedeltaIndex.components": "reference/api/pandas.timedeltaindex.components.html", "TimedeltaIndex.days": "reference/api/pandas.timedeltaindex.days.html", "TimedeltaIndex.floor()": "reference/api/pandas.timedeltaindex.floor.html", "TimedeltaIndex.inferred_freq": "reference/api/pandas.timedeltaindex.inferred_freq.html", "TimedeltaIndex.mean()": "reference/api/pandas.timedeltaindex.mean.html", "TimedeltaIndex.microseconds": "reference/api/pandas.timedeltaindex.microseconds.html", "TimedeltaIndex.nanoseconds": "reference/api/pandas.timedeltaindex.nanoseconds.html", "TimedeltaIndex.round()": "reference/api/pandas.timedeltaindex.round.html", "TimedeltaIndex.seconds": "reference/api/pandas.timedeltaindex.seconds.html", "TimedeltaIndex.to_frame()": "reference/api/pandas.timedeltaindex.to_frame.html", "TimedeltaIndex.to_pytimedelta()": "reference/api/pandas.timedeltaindex.to_pytimedelta.html", "TimedeltaIndex.to_series()": "reference/api/pandas.timedeltaindex.to_series.html", "TimedeltaIndex[source]": "reference/api/pandas.timedeltaindex.html", "Timestamp": "reference/api/pandas.timestamp.html", "Timestamp.asm8": "reference/api/pandas.timestamp.asm8.html", "Timestamp.astimezone()": "reference/api/pandas.timestamp.astimezone.html", "Timestamp.ceil()": "reference/api/pandas.timestamp.ceil.html", "Timestamp.combine()": "reference/api/pandas.timestamp.combine.html", "Timestamp.ctime()": "reference/api/pandas.timestamp.ctime.html", "Timestamp.date()": "reference/api/pandas.timestamp.date.html", "Timestamp.day": "reference/api/pandas.timestamp.day.html", "Timestamp.dayofweek": "reference/api/pandas.timestamp.dayofweek.html", "Timestamp.dayofyear": "reference/api/pandas.timestamp.dayofyear.html", "Timestamp.daysinmonth": "reference/api/pandas.timestamp.daysinmonth.html", "Timestamp.days_in_month": "reference/api/pandas.timestamp.days_in_month.html", "Timestamp.day_name()": "reference/api/pandas.timestamp.day_name.html", "Timestamp.dst()": "reference/api/pandas.timestamp.dst.html", "Timestamp.floor()": "reference/api/pandas.timestamp.floor.html", "Timestamp.fold": "reference/api/pandas.timestamp.fold.html", "Timestamp.freq": "reference/api/pandas.timestamp.freq.html", "Timestamp.freqstr": "reference/api/pandas.timestamp.freqstr.html", "Timestamp.fromisoformat()": "reference/api/pandas.timestamp.fromisoformat.html", "Timestamp.fromordinal()": "reference/api/pandas.timestamp.fromordinal.html", "Timestamp.fromtimestamp()": "reference/api/pandas.timestamp.fromtimestamp.html", "Timestamp.hour": "reference/api/pandas.timestamp.hour.html", "Timestamp.isocalendar()": "reference/api/pandas.timestamp.isocalendar.html", "Timestamp.isoformat()": "reference/api/pandas.timestamp.isoformat.html", "Timestamp.isoweekday()": "reference/api/pandas.timestamp.isoweekday.html", "Timestamp.is_leap_year": "reference/api/pandas.timestamp.is_leap_year.html", "Timestamp.is_month_end": "reference/api/pandas.timestamp.is_month_end.html", "Timestamp.is_month_start": "reference/api/pandas.timestamp.is_month_start.html", "Timestamp.is_quarter_end": "reference/api/pandas.timestamp.is_quarter_end.html", "Timestamp.is_quarter_start": "reference/api/pandas.timestamp.is_quarter_start.html", "Timestamp.is_year_end": "reference/api/pandas.timestamp.is_year_end.html", "Timestamp.is_year_start": "reference/api/pandas.timestamp.is_year_start.html", "Timestamp.max": "reference/api/pandas.timestamp.max.html", "Timestamp.microsecond": "reference/api/pandas.timestamp.microsecond.html", "Timestamp.min": "reference/api/pandas.timestamp.min.html", "Timestamp.minute": "reference/api/pandas.timestamp.minute.html", "Timestamp.month": "reference/api/pandas.timestamp.month.html", "Timestamp.month_name()": "reference/api/pandas.timestamp.month_name.html", "Timestamp.nanosecond": "reference/api/pandas.timestamp.nanosecond.html", "Timestamp.normalize()": "reference/api/pandas.timestamp.normalize.html", "Timestamp.now()": "reference/api/pandas.timestamp.now.html", "Timestamp.quarter": "reference/api/pandas.timestamp.quarter.html", "Timestamp.replace()": "reference/api/pandas.timestamp.replace.html", "Timestamp.resolution": "reference/api/pandas.timestamp.resolution.html", "Timestamp.round()": "reference/api/pandas.timestamp.round.html", "Timestamp.second": "reference/api/pandas.timestamp.second.html", "Timestamp.strftime()": "reference/api/pandas.timestamp.strftime.html", "Timestamp.strptime()": "reference/api/pandas.timestamp.strptime.html", "Timestamp.time()": "reference/api/pandas.timestamp.time.html", "Timestamp.timestamp()": "reference/api/pandas.timestamp.timestamp.html", "Timestamp.timetuple()": "reference/api/pandas.timestamp.timetuple.html", "Timestamp.timetz()": "reference/api/pandas.timestamp.timetz.html", "Timestamp.today()": "reference/api/pandas.timestamp.today.html", "Timestamp.toordinal()": "reference/api/pandas.timestamp.toordinal.html", "Timestamp.to_datetime64()": "reference/api/pandas.timestamp.to_datetime64.html", "Timestamp.to_julian_date()": "reference/api/pandas.timestamp.to_julian_date.html", "Timestamp.to_numpy()": "reference/api/pandas.timestamp.to_numpy.html", "Timestamp.to_period()": "reference/api/pandas.timestamp.to_period.html", "Timestamp.to_pydatetime()": "reference/api/pandas.timestamp.to_pydatetime.html", "Timestamp.tz": "reference/api/pandas.timestamp.tz.html", "Timestamp.tzinfo": "reference/api/pandas.timestamp.tzinfo.html", "Timestamp.tzname()": "reference/api/pandas.timestamp.tzname.html", "Timestamp.tz_convert()": "reference/api/pandas.timestamp.tz_convert.html", "Timestamp.tz_localize()": "reference/api/pandas.timestamp.tz_localize.html", "Timestamp.utcfromtimestamp()": "reference/api/pandas.timestamp.utcfromtimestamp.html", "Timestamp.utcnow()": "reference/api/pandas.timestamp.utcnow.html", "Timestamp.utcoffset()": "reference/api/pandas.timestamp.utcoffset.html", "Timestamp.utctimetuple()": "reference/api/pandas.timestamp.utctimetuple.html", "Timestamp.value": "reference/api/pandas.timestamp.value.html", "Timestamp.week": "reference/api/pandas.timestamp.week.html", "Timestamp.weekday()": "reference/api/pandas.timestamp.weekday.html", "Timestamp.weekday_name": "reference/api/pandas.timestamp.weekday_name.html", "Timestamp.weekofyear": "reference/api/pandas.timestamp.weekofyear.html", "Timestamp.year": "reference/api/pandas.timestamp.year.html", "tseries.offsets.BQuarterBegin()": "reference/api/pandas.tseries.offsets.bquarterbegin.html", "tseries.offsets.BQuarterEnd()": "reference/api/pandas.tseries.offsets.bquarterend.html", "tseries.offsets.BusinessDay()": "reference/api/pandas.tseries.offsets.businessday.html", "tseries.offsets.BusinessHour()": "reference/api/pandas.tseries.offsets.businesshour.html", "tseries.offsets.BusinessMonthBegin[source]": "reference/api/pandas.tseries.offsets.businessmonthbegin.html", "tseries.offsets.BusinessMonthEnd[source]": "reference/api/pandas.tseries.offsets.businessmonthend.html", "tseries.offsets.BYearBegin()": "reference/api/pandas.tseries.offsets.byearbegin.html", "tseries.offsets.BYearEnd()": "reference/api/pandas.tseries.offsets.byearend.html", "tseries.offsets.CustomBusinessDay()": "reference/api/pandas.tseries.offsets.custombusinessday.html", "tseries.offsets.CustomBusinessHour()": "reference/api/pandas.tseries.offsets.custombusinesshour.html", "tseries.offsets.CustomBusinessMonthBegin()": "reference/api/pandas.tseries.offsets.custombusinessmonthbegin.html", "tseries.offsets.CustomBusinessMonthEnd()": "reference/api/pandas.tseries.offsets.custombusinessmonthend.html", "tseries.offsets.DateOffset()": "reference/api/pandas.tseries.offsets.dateoffset.html", "tseries.offsets.Day()": "reference/api/pandas.tseries.offsets.day.html", "tseries.offsets.Easter[source]": "reference/api/pandas.tseries.offsets.easter.html", "tseries.offsets.FY5253()": "reference/api/pandas.tseries.offsets.fy5253.html", "tseries.offsets.FY5253Quarter()": "reference/api/pandas.tseries.offsets.fy5253quarter.html", "tseries.offsets.Hour()": "reference/api/pandas.tseries.offsets.hour.html", "tseries.offsets.LastWeekOfMonth()": "reference/api/pandas.tseries.offsets.lastweekofmonth.html", "tseries.offsets.Micro()": "reference/api/pandas.tseries.offsets.micro.html", "tseries.offsets.Milli()": "reference/api/pandas.tseries.offsets.milli.html", "tseries.offsets.Minute()": "reference/api/pandas.tseries.offsets.minute.html", "tseries.offsets.MonthBegin[source]": "reference/api/pandas.tseries.offsets.monthbegin.html", "tseries.offsets.MonthEnd[source]": "reference/api/pandas.tseries.offsets.monthend.html", "tseries.offsets.MonthOffset[source]": "reference/api/pandas.tseries.offsets.monthoffset.html", "tseries.offsets.Nano()": "reference/api/pandas.tseries.offsets.nano.html", "tseries.offsets.QuarterBegin()": "reference/api/pandas.tseries.offsets.quarterbegin.html", "tseries.offsets.QuarterEnd()": "reference/api/pandas.tseries.offsets.quarterend.html", "tseries.offsets.QuarterOffset()": "reference/api/pandas.tseries.offsets.quarteroffset.html", "tseries.offsets.Second()": "reference/api/pandas.tseries.offsets.second.html", "tseries.offsets.SemiMonthBegin()": "reference/api/pandas.tseries.offsets.semimonthbegin.html", "tseries.offsets.SemiMonthEnd()": "reference/api/pandas.tseries.offsets.semimonthend.html", "tseries.offsets.SemiMonthOffset()": "reference/api/pandas.tseries.offsets.semimonthoffset.html", "tseries.offsets.Tick()": "reference/api/pandas.tseries.offsets.tick.html", "tseries.offsets.Week()": "reference/api/pandas.tseries.offsets.week.html", "tseries.offsets.WeekOfMonth()": "reference/api/pandas.tseries.offsets.weekofmonth.html", "tseries.offsets.YearBegin()": "reference/api/pandas.tseries.offsets.yearbegin.html", "tseries.offsets.YearEnd()": "reference/api/pandas.tseries.offsets.yearend.html", "tseries.offsets.YearOffset()": "reference/api/pandas.tseries.offsets.yearoffset.html", "UInt16Dtype[source]": "reference/api/pandas.uint16dtype.html", "UInt32Dtype[source]": "reference/api/pandas.uint32dtype.html", "UInt64Dtype[source]": "reference/api/pandas.uint64dtype.html", "UInt64Index[source]": "reference/api/pandas.uint64index.html", "UInt8Dtype[source]": "reference/api/pandas.uint8dtype.html", "Week.apply()": "reference/api/pandas.tseries.offsets.week.apply.html", "Week.apply_index()": "reference/api/pandas.tseries.offsets.week.apply_index.html", "Week.base": "reference/api/pandas.tseries.offsets.week.base.html", "Week.copy()": "reference/api/pandas.tseries.offsets.week.copy.html", "Week.freqstr": "reference/api/pandas.tseries.offsets.week.freqstr.html", "Week.isAnchored()": "reference/api/pandas.tseries.offsets.week.isanchored.html", "Week.kwds": "reference/api/pandas.tseries.offsets.week.kwds.html", "Week.name": "reference/api/pandas.tseries.offsets.week.name.html", "Week.nanos": "reference/api/pandas.tseries.offsets.week.nanos.html", "Week.normalize": "reference/api/pandas.tseries.offsets.week.normalize.html", "Week.onOffset()": "reference/api/pandas.tseries.offsets.week.onoffset.html", "Week.rollback()": "reference/api/pandas.tseries.offsets.week.rollback.html", "Week.rollforward()": "reference/api/pandas.tseries.offsets.week.rollforward.html", "Week.rule_code": "reference/api/pandas.tseries.offsets.week.rule_code.html", "WeekOfMonth.apply()": "reference/api/pandas.tseries.offsets.weekofmonth.apply.html", "WeekOfMonth.apply_index()": "reference/api/pandas.tseries.offsets.weekofmonth.apply_index.html", "WeekOfMonth.base": "reference/api/pandas.tseries.offsets.weekofmonth.base.html", "WeekOfMonth.copy()": "reference/api/pandas.tseries.offsets.weekofmonth.copy.html", "WeekOfMonth.freqstr": "reference/api/pandas.tseries.offsets.weekofmonth.freqstr.html", "WeekOfMonth.isAnchored()": "reference/api/pandas.tseries.offsets.weekofmonth.isanchored.html", "WeekOfMonth.kwds": "reference/api/pandas.tseries.offsets.weekofmonth.kwds.html", "WeekOfMonth.name": "reference/api/pandas.tseries.offsets.weekofmonth.name.html", "WeekOfMonth.nanos": "reference/api/pandas.tseries.offsets.weekofmonth.nanos.html", "WeekOfMonth.normalize": "reference/api/pandas.tseries.offsets.weekofmonth.normalize.html", "WeekOfMonth.onOffset()": "reference/api/pandas.tseries.offsets.weekofmonth.onoffset.html", "WeekOfMonth.rollback()": "reference/api/pandas.tseries.offsets.weekofmonth.rollback.html", "WeekOfMonth.rollforward()": "reference/api/pandas.tseries.offsets.weekofmonth.rollforward.html", "WeekOfMonth.rule_code": "reference/api/pandas.tseries.offsets.weekofmonth.rule_code.html", "Window": "reference/window.html", "Window.mean()": "reference/api/pandas.core.window.window.mean.html", "Window.sum()": "reference/api/pandas.core.window.window.sum.html", "YearBegin.apply()": "reference/api/pandas.tseries.offsets.yearbegin.apply.html", "YearBegin.apply_index()": "reference/api/pandas.tseries.offsets.yearbegin.apply_index.html", "YearBegin.base": "reference/api/pandas.tseries.offsets.yearbegin.base.html", "YearBegin.copy()": "reference/api/pandas.tseries.offsets.yearbegin.copy.html", "YearBegin.freqstr": "reference/api/pandas.tseries.offsets.yearbegin.freqstr.html", "YearBegin.isAnchored()": "reference/api/pandas.tseries.offsets.yearbegin.isanchored.html", "YearBegin.kwds": "reference/api/pandas.tseries.offsets.yearbegin.kwds.html", "YearBegin.name": "reference/api/pandas.tseries.offsets.yearbegin.name.html", "YearBegin.nanos": "reference/api/pandas.tseries.offsets.yearbegin.nanos.html", "YearBegin.normalize": "reference/api/pandas.tseries.offsets.yearbegin.normalize.html", "YearBegin.onOffset()": "reference/api/pandas.tseries.offsets.yearbegin.onoffset.html", "YearBegin.rollback()": "reference/api/pandas.tseries.offsets.yearbegin.rollback.html", "YearBegin.rollforward()": "reference/api/pandas.tseries.offsets.yearbegin.rollforward.html", "YearBegin.rule_code": "reference/api/pandas.tseries.offsets.yearbegin.rule_code.html", "YearEnd.apply()": "reference/api/pandas.tseries.offsets.yearend.apply.html", "YearEnd.apply_index()": "reference/api/pandas.tseries.offsets.yearend.apply_index.html", "YearEnd.base": "reference/api/pandas.tseries.offsets.yearend.base.html", "YearEnd.copy()": "reference/api/pandas.tseries.offsets.yearend.copy.html", "YearEnd.freqstr": "reference/api/pandas.tseries.offsets.yearend.freqstr.html", "YearEnd.isAnchored()": "reference/api/pandas.tseries.offsets.yearend.isanchored.html", "YearEnd.kwds": "reference/api/pandas.tseries.offsets.yearend.kwds.html", "YearEnd.name": "reference/api/pandas.tseries.offsets.yearend.name.html", "YearEnd.nanos": "reference/api/pandas.tseries.offsets.yearend.nanos.html", "YearEnd.normalize": "reference/api/pandas.tseries.offsets.yearend.normalize.html", "YearEnd.onOffset()": "reference/api/pandas.tseries.offsets.yearend.onoffset.html", "YearEnd.rollback()": "reference/api/pandas.tseries.offsets.yearend.rollback.html", "YearEnd.rollforward()": "reference/api/pandas.tseries.offsets.yearend.rollforward.html", "YearEnd.rule_code": "reference/api/pandas.tseries.offsets.yearend.rule_code.html", "YearOffset.apply()": "reference/api/pandas.tseries.offsets.yearoffset.apply.html", "YearOffset.apply_index()": "reference/api/pandas.tseries.offsets.yearoffset.apply_index.html", "YearOffset.base": "reference/api/pandas.tseries.offsets.yearoffset.base.html", "YearOffset.copy()": "reference/api/pandas.tseries.offsets.yearoffset.copy.html", "YearOffset.freqstr": "reference/api/pandas.tseries.offsets.yearoffset.freqstr.html", "YearOffset.isAnchored()": "reference/api/pandas.tseries.offsets.yearoffset.isanchored.html", "YearOffset.kwds": "reference/api/pandas.tseries.offsets.yearoffset.kwds.html", "YearOffset.name": "reference/api/pandas.tseries.offsets.yearoffset.name.html", "YearOffset.nanos": "reference/api/pandas.tseries.offsets.yearoffset.nanos.html", "YearOffset.normalize": "reference/api/pandas.tseries.offsets.yearoffset.normalize.html", "YearOffset.onOffset()": "reference/api/pandas.tseries.offsets.yearoffset.onoffset.html", "YearOffset.rollback()": "reference/api/pandas.tseries.offsets.yearoffset.rollback.html", "YearOffset.rollforward()": "reference/api/pandas.tseries.offsets.yearoffset.rollforward.html", "YearOffset.rule_code": "reference/api/pandas.tseries.offsets.yearoffset.rule_code.html"}